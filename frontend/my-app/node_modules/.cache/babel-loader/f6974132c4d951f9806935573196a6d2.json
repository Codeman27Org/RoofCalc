{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cody\\\\Coding\\\\RealCalc\\\\RoofCalc\\\\frontend\\\\my-app\\\\src\\\\components\\\\PropertyTaxes.js\";\nimport React, { useState, useEffect } from 'react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { InputAdornment, TextField, ExpansionPanel, Typography, ExpansionPanelDetails, ExpansionPanelSummary, FormControl } from '@material-ui/core';\n\nconst PropertyTaxes = props => {\n  const [values, setValues] = useState({\n    taxAmount: props.values.taxes.tax_amt_yr.toLocaleString('en-US'),\n    taxRate: (props.values.taxes.tax_rate * 100).toString().slice(0, 4),\n    monthlyPayment: '',\n    percActive: false\n  });\n\n  const taxAmountCalc = (type, value, housePrice) => {\n    if (type === 'percent') {\n      setValues({ ...values,\n        taxAmount: formatter.format(Math.round(value / 100 * parseInt(housePrice.toString().replace(/,/g, '')))).replace('$', '')\n      }); //divide by 100 to get it as a percent again\n    } else {\n      setValues({ ...values,\n        taxRate: (parseInt(value.toString().replace(/,/g, '')) / parseInt(housePrice.toString().replace(/,/g, '')) * 100).toFixed(2)\n      });\n    }\n  };\n\n  const handleChange = event => {\n    const re = /^[.,0-9\\b]+$/; // if value is not blank, then test the regex and only accept numbers\n\n    if (event.target.value === '' || re.test(event.target.value)) {\n      if (event.target.name === 'taxAmount') {\n        setValues({ ...values,\n          [event.target.name]: formatter.format(event.target.value.toString().replace(/,/g, '')).replace('$', '')\n        });\n      } else {\n        setValues({ ...values,\n          [event.target.name]: event.target.value === '' || event.target.value === '.' ? 0.0 : event.target.value.replace(/\\b(?:0*(0\\.\\d+)|0+)/g, '$1')\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    props.changeValue(parseInt(values.monthlyPayment.replace('$', ''))); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.monthlyPayment]);\n  useEffect(() => {\n    setValues({ ...values,\n      monthlyPayment: formatter.format(Math.round(values.taxAmount.replace(/,/g, '') / 12))\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.taxAmount, values.taxRate]);\n  useEffect(() => {\n    if (values.percActive) return; //Don't want current textfield changing while the user is changing it\n\n    taxAmountCalc('amount', values.taxAmount, props.housePrice); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.taxAmount]);\n  useEffect(() => {\n    if (!values.percActive) return; //Don't want current textfield changing while the user is changing it\n\n    taxAmountCalc('percent', values.taxRate, props.housePrice); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.taxRate]);\n  useEffect(() => {\n    setValues({ ...values,\n      monthlyPayment: formatter.format(Math.round(values.taxAmount.replace(/,/g, '') / 12))\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  return /*#__PURE__*/React.createElement(ExpansionPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ExpansionPanelSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      className: \"expand-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    }),\n    \"aria-controls\": \"panel1a-content\",\n    id: \"panel1a-header\",\n    className: \"accordion-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Property Taxes\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"accordion-total expenses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, values.monthlyPayment, \"/Mo\")), /*#__PURE__*/React.createElement(ExpansionPanelDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"two-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Tax Amount\",\n    variant: \"filled\",\n    name: \"taxAmount\",\n    value: values.taxAmount,\n    fullWidth: true,\n    onFocus: () => setValues({ ...values,\n      percActive: false\n    }),\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }, \"$\"))\n    },\n    onChange: (event, value) => handleChange(event, value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Tax Rate\",\n    variant: \"filled\",\n    name: \"taxRate\",\n    value: values.taxRate,\n    fullWidth: true,\n    onFocus: () => setValues({ ...values,\n      percActive: true\n    }),\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }, \"%\"))\n    },\n    onChange: (event, value) => handleChange(event, value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default PropertyTaxes;","map":{"version":3,"sources":["C:/Users/Cody/Coding/RealCalc/RoofCalc/frontend/my-app/src/components/PropertyTaxes.js"],"names":["React","useState","useEffect","ExpandMoreIcon","InputAdornment","TextField","ExpansionPanel","Typography","ExpansionPanelDetails","ExpansionPanelSummary","FormControl","PropertyTaxes","props","values","setValues","taxAmount","taxes","tax_amt_yr","toLocaleString","taxRate","tax_rate","toString","slice","monthlyPayment","percActive","taxAmountCalc","type","value","housePrice","formatter","format","Math","round","parseInt","replace","toFixed","handleChange","event","re","target","test","name","changeValue","Intl","NumberFormat","style","currency","minimumFractionDigits","startAdornment","endAdornment"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {InputAdornment, TextField, ExpansionPanel, Typography, ExpansionPanelDetails, ExpansionPanelSummary, FormControl} from '@material-ui/core'\r\n\r\nconst PropertyTaxes = (props) => {\r\n  const [values, setValues] = useState({\r\n      taxAmount: props.values.taxes.tax_amt_yr.toLocaleString('en-US'),\r\n      taxRate: (props.values.taxes.tax_rate * 100).toString().slice(0,4),\r\n      monthlyPayment: '',\r\n      percActive: false\r\n    })\r\n\r\n    const taxAmountCalc = (type, value, housePrice) => {\r\n      if (type === 'percent') {\r\n        setValues({...values, taxAmount: formatter.format(Math.round((value/100) * parseInt(housePrice.toString().replace(/,/g, '')))).replace('$', '')}) //divide by 100 to get it as a percent again\r\n      }\r\n      else {\r\n        setValues({...values, taxRate: ((parseInt(value.toString().replace(/,/g, ''))/parseInt(housePrice.toString().replace(/,/g, ''))) * 100).toFixed(2)})\r\n      }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n      const re = /^[.,0-9\\b]+$/;\r\n      // if value is not blank, then test the regex and only accept numbers\r\n      if (event.target.value === '' || re.test(event.target.value)) {\r\n        if (event.target.name === 'taxAmount') {\r\n          setValues({ ...values, [event.target.name]: formatter.format(event.target.value.toString().replace(/,/g, '')).replace('$', '')})\r\n        } else {\r\n          setValues({ ...values, [event.target.name]: (event.target.value === '' || event.target.value === '.') ? 0.0 : event.target.value.replace(/\\b(?:0*(0\\.\\d+)|0+)/g, '$1')})\r\n        }\r\n      }\r\n    }\r\n\r\n  useEffect(() => {\r\n    props.changeValue(parseInt(values.monthlyPayment.replace('$', '')))\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.monthlyPayment])\r\n\r\n  useEffect(() => {\r\n    setValues({ ...values, monthlyPayment: formatter.format(Math.round(values.taxAmount.replace(/,/g, '')/12))})\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.taxAmount, values.taxRate])\r\n\r\n  useEffect(() => {\r\n    if (values.percActive) return //Don't want current textfield changing while the user is changing it\r\n    taxAmountCalc('amount', values.taxAmount, props.housePrice)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.taxAmount]);\r\n\r\n  useEffect(() => {\r\n    if (!values.percActive) return //Don't want current textfield changing while the user is changing it\r\n    taxAmountCalc('percent', values.taxRate, props.housePrice)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.taxRate]);\r\n\r\n  useEffect(() => {\r\n    setValues({ ...values, monthlyPayment: formatter.format(Math.round(values.taxAmount.replace(/,/g, '')/12))})\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0\r\n  })\r\n\r\n  return (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary\r\n      expandIcon={<ExpandMoreIcon className='expand-icon'/>}\r\n      aria-controls='panel1a-content'\r\n      id='panel1a-header'\r\n      className='accordion-summary'\r\n      >\r\n        <Typography>Property Taxes</Typography>\r\n        <Typography className='accordion-total expenses'>{values.monthlyPayment}/Mo</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <FormControl fullWidth>\r\n          <div className='two-column'>\r\n            <TextField\r\n                label='Tax Amount'\r\n                variant='filled'\r\n                name='taxAmount'\r\n                value={values.taxAmount}\r\n                fullWidth={true}\r\n                onFocus={() => setValues({...values, percActive: false})}\r\n                InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <p>$</p>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                onChange={(event, value)=> handleChange(event, value)}\r\n            />\r\n            <TextField\r\n                label='Tax Rate'\r\n                variant='filled'\r\n                name='taxRate'\r\n                value={values.taxRate}\r\n                fullWidth={true}\r\n                onFocus={() => setValues({...values, percActive: true})}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <p>%</p>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                onChange={(event, value)=> handleChange(event, value)}\r\n            />\r\n          </div>\r\n        </FormControl>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  )\r\n}\r\n\r\nexport default PropertyTaxes\r\n"]},"metadata":{},"sourceType":"module"}