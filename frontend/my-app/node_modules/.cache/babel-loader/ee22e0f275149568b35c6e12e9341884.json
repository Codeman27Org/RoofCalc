{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cody\\\\Coding\\\\RealCalc\\\\RoofCalc\\\\frontend\\\\my-app\\\\src\\\\components\\\\FloodInsurance.js\";\nimport React, { useState, useEffect } from 'react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { Checkbox, Tooltip, InputAdornment, TextField, ExpansionPanel, Typography, ExpansionPanelDetails, ExpansionPanelSummary, FormControl } from '@material-ui/core';\n\nconst FloodInsurance = props => {\n  const [values, setValues] = useState({\n    fiChecked: false,\n    fi: props.values.fi.yearly.toLocaleString('en-US'),\n    monthlyPayment: 0\n  });\n  useEffect(() => {\n    props.changeValue(parseInt(values.monthlyPayment.toString().replace('$', '')), 'floodInsurance'); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.monthlyPayment]);\n  useEffect(() => {\n    let fi = values.fiChecked ? parseInt(values.fi.replace(/,/g, '')) : 0;\n    setValues({ ...values,\n      monthlyPayment: formatter.format((fi / 12).toFixed(0))\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.fi, values.fiChecked]);\n\n  const handleChange = (event, value) => {\n    const re = /^[.,0-9\\b]+$/; // if value is not blank, then test the regex and only accept numbers\n\n    if (event.target.value === '' || re.test(event.target.value)) {\n      setValues({ ...values,\n        [event.target.name]: formatter.format(event.target.value.toString().replace(/,/g, '')).replace('$', '')\n      });\n    }\n  };\n\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  return /*#__PURE__*/React.createElement(ExpansionPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ExpansionPanelSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      className: \"expand-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }\n    }),\n    \"aria-controls\": \"panel1a-content\",\n    id: \"panel1a-header\",\n    className: \"accordion-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Flood Insurance\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"accordion-total expenses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, values.monthlyPayment, \"/Mo\")), /*#__PURE__*/React.createElement(ExpansionPanelDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"two-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    color: \"primary\",\n    onChange: event => {\n      setValues({ ...values,\n        fiChecked: !values.fiChecked\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Flood Insurance\",\n    name: \"fi\",\n    variant: \"filled\",\n    disabled: !values.fiChecked,\n    value: values.fiChecked ? values.fi : 0,\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, \"$\")),\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          marginBottom: '0px',\n          marginRight: '15px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 23\n        }\n      }, \"/Year\"), /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Flood insurance is required if the house is located in a frequent flood plain\",\n        enterTouchDelay: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(InfoIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }\n      })))\n    },\n    onChange: (event, value) => handleChange(event, value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default FloodInsurance;","map":{"version":3,"sources":["C:/Users/Cody/Coding/RealCalc/RoofCalc/frontend/my-app/src/components/FloodInsurance.js"],"names":["React","useState","useEffect","ExpandMoreIcon","InfoIcon","Checkbox","Tooltip","InputAdornment","TextField","ExpansionPanel","Typography","ExpansionPanelDetails","ExpansionPanelSummary","FormControl","FloodInsurance","props","values","setValues","fiChecked","fi","yearly","toLocaleString","monthlyPayment","changeValue","parseInt","toString","replace","formatter","format","toFixed","handleChange","event","value","re","target","test","name","Intl","NumberFormat","style","currency","minimumFractionDigits","startAdornment","endAdornment","marginBottom","marginRight"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport { Checkbox,Tooltip, InputAdornment, TextField, ExpansionPanel, Typography, ExpansionPanelDetails, ExpansionPanelSummary, FormControl } from '@material-ui/core'\r\n\r\nconst FloodInsurance = (props) => {\r\n  const [values, setValues] = useState({\r\n      fiChecked: false,\r\n      fi: props.values.fi.yearly.toLocaleString('en-US'),\r\n      monthlyPayment: 0,\r\n    })\r\n\r\n  useEffect(() => {\r\n    props.changeValue(parseInt(values.monthlyPayment.toString().replace('$', '')), 'floodInsurance')\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.monthlyPayment])\r\n\r\n  useEffect(() => {\r\n    let fi = values.fiChecked ? parseInt(values.fi.replace(/,/g, '')) : 0\r\n\r\n    setValues({ ...values, monthlyPayment: formatter.format((fi/12).toFixed(0))});\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.fi, values.fiChecked])\r\n\r\n  const handleChange = (event, value) => {\r\n    const re = /^[.,0-9\\b]+$/\r\n    // if value is not blank, then test the regex and only accept numbers\r\n    if (event.target.value === '' || re.test(event.target.value)) {\r\n      setValues({ ...values, [event.target.name]: formatter.format(event.target.value.toString().replace(/,/g, '')).replace('$', '')})\r\n    }\r\n  }\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0\r\n  })\r\n\r\n  return (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary\r\n      expandIcon={<ExpandMoreIcon className='expand-icon'/>}\r\n      aria-controls='panel1a-content'\r\n      id='panel1a-header'\r\n      className='accordion-summary'\r\n      >\r\n        <Typography>Flood Insurance</Typography>\r\n        <Typography className='accordion-total expenses'>{values.monthlyPayment}/Mo</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <FormControl fullWidth>\r\n          <div className='two-column'>\r\n            <Checkbox\r\n              color='primary'\r\n              onChange={(event) => {setValues({ ...values, fiChecked: !values.fiChecked})}}\r\n            />\r\n            <TextField\r\n                label='Flood Insurance'\r\n                name='fi'\r\n                variant='filled'\r\n                disabled={!values.fiChecked}\r\n                value={values.fiChecked ? values.fi : 0}\r\n                InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <p>$</p>\r\n                      </InputAdornment>\r\n                    ),\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                      <p style={{marginBottom: '0px', marginRight: '15px'}}>/Year</p>\r\n                      <Tooltip\r\n                        title=\"Flood insurance is required if the house is located in a frequent flood plain\"\r\n                        enterTouchDelay={0}\r\n                        >\r\n                        <InfoIcon />\r\n                      </Tooltip>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                onChange={(event, value)=> handleChange(event, value)}\r\n              />\r\n          </div>\r\n        </FormControl>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  )\r\n}\r\n\r\nexport default FloodInsurance\r\n"]},"metadata":{},"sourceType":"module"}