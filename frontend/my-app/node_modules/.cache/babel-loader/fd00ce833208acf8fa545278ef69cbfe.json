{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cody\\\\Coding\\\\RealCalc\\\\RoofCalc\\\\frontend\\\\my-app\\\\src\\\\components\\\\GoogleAutocomplete.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\n\nconst GoogleAutocomplete = props => {\n  const [query, setQuery] = useState(\"\");\n  const autoCompleteRef = useRef(null);\n\n  const loadScript = (url, callback) => {\n    let script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n\n    if (script.readyState) {\n      script.onreadystatechange = function () {\n        if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n          script.onreadystatechange = null;\n          callback();\n        }\n      };\n    } else {\n      script.onload = () => callback();\n    }\n\n    script.src = url;\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\n  };\n\n  const handleScriptLoad = (updateQuery, autoCompleteRef) => {\n    autoComplete = new window.google.maps.places.Autocomplete(autoCompleteRef.current, {\n      types: ['address'],\n      componentRestrictions: {\n        country: \"us\"\n      }\n    });\n    autoComplete.setFields([\"address_components\", \"formatted_address\"]);\n    autoComplete.addListener(\"place_changed\", () => handlePlaceSelect(updateQuery));\n  };\n\n  const handlePlaceSelect = updateQuery => {\n    const addressObject = autoComplete.getPlace();\n    const query = addressObject.formatted_address;\n    updateQuery(query);\n    console.log(addressObject);\n  };\n\n  useEffect(() => {\n    loadScript(`https://maps.googleapis.com/maps/api/js?key=AIzaSyCgNXXDm46LHt0rmgndPsBIrbIYNYLGsM8&libraries=places`, () => handleScriptLoad(setQuery, autoCompleteRef));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-location-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: autoCompleteRef,\n    onChange: event => setQuery(event.target.value),\n    placeholder: \"Adress...\",\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default GoogleAutocomplete;","map":{"version":3,"sources":["C:/Users/Cody/Coding/RealCalc/RoofCalc/frontend/my-app/src/components/GoogleAutocomplete.js"],"names":["React","useState","useEffect","useRef","GoogleAutocomplete","props","query","setQuery","autoCompleteRef","loadScript","url","callback","script","document","createElement","type","readyState","onreadystatechange","onload","src","getElementsByTagName","appendChild","handleScriptLoad","updateQuery","autoComplete","window","google","maps","places","Autocomplete","current","types","componentRestrictions","country","setFields","addListener","handlePlaceSelect","addressObject","getPlace","formatted_address","console","log","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMO,eAAe,GAAGL,MAAM,CAAC,IAAD,CAA9B;;AAEA,QAAMM,UAAU,GAAG,CAACC,GAAD,EAAMC,QAAN,KAAmB;AACpC,QAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,IAAAA,MAAM,CAACG,IAAP,GAAc,iBAAd;;AAEA,QAAIH,MAAM,CAACI,UAAX,EAAuB;AACrBJ,MAAAA,MAAM,CAACK,kBAAP,GAA4B,YAAW;AACrC,YAAIL,MAAM,CAACI,UAAP,KAAsB,QAAtB,IAAkCJ,MAAM,CAACI,UAAP,KAAsB,UAA5D,EAAwE;AACtEJ,UAAAA,MAAM,CAACK,kBAAP,GAA4B,IAA5B;AACAN,UAAAA,QAAQ;AACT;AACF,OALD;AAMD,KAPD,MAOO;AACLC,MAAAA,MAAM,CAACM,MAAP,GAAgB,MAAMP,QAAQ,EAA9B;AACD;;AAEDC,IAAAA,MAAM,CAACO,GAAP,GAAaT,GAAb;AACAG,IAAAA,QAAQ,CAACO,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,WAAzC,CAAqDT,MAArD;AACD,GAjBD;;AAmBA,QAAMU,gBAAgB,GAAG,CAACC,WAAD,EAAcf,eAAd,KAAkC;AACzDgB,IAAAA,YAAY,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,MAAnB,CAA0BC,YAA9B,CACbrB,eAAe,CAACsB,OADH,EAEb;AAAEC,MAAAA,KAAK,EAAE,CAAC,SAAD,CAAT;AAAsBC,MAAAA,qBAAqB,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX;AAA7C,KAFa,CAAf;AAIAT,IAAAA,YAAY,CAACU,SAAb,CAAuB,CAAC,oBAAD,EAAuB,mBAAvB,CAAvB;AACAV,IAAAA,YAAY,CAACW,WAAb,CAAyB,eAAzB,EAA0C,MACxCC,iBAAiB,CAACb,WAAD,CADnB;AAGD,GATD;;AAWA,QAAMa,iBAAiB,GAAIb,WAAD,IAAiB;AACzC,UAAMc,aAAa,GAAGb,YAAY,CAACc,QAAb,EAAtB;AACA,UAAMhC,KAAK,GAAG+B,aAAa,CAACE,iBAA5B;AACAhB,IAAAA,WAAW,CAACjB,KAAD,CAAX;AACAkC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AACD,GALD;;AAOAnC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU,CACP,sGADO,EAER,MAAMa,gBAAgB,CAACf,QAAD,EAAWC,eAAX,CAFd,CAAV;AAID,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEA,eADP;AAEE,IAAA,QAAQ,EAAEkC,KAAK,IAAInC,QAAQ,CAACmC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAF7B;AAGE,IAAA,WAAW,EAAC,WAHd;AAIE,IAAA,KAAK,EAAEtC,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD,CA1DD;;AA4DA,eAAeF,kBAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst GoogleAutocomplete = (props) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const autoCompleteRef = useRef(null);\r\n\r\n  const loadScript = (url, callback) => {\r\n    let script = document.createElement(\"script\");\r\n    script.type = \"text/javascript\";\r\n\r\n    if (script.readyState) {\r\n      script.onreadystatechange = function() {\r\n        if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\r\n          script.onreadystatechange = null;\r\n          callback();\r\n        }\r\n      };\r\n    } else {\r\n      script.onload = () => callback();\r\n    }\r\n\r\n    script.src = url;\r\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\r\n  };\r\n\r\n  const handleScriptLoad = (updateQuery, autoCompleteRef) => {\r\n    autoComplete = new window.google.maps.places.Autocomplete(\r\n      autoCompleteRef.current,\r\n      { types: ['address'], componentRestrictions: { country: \"us\" } }\r\n    );\r\n    autoComplete.setFields([\"address_components\", \"formatted_address\"]);\r\n    autoComplete.addListener(\"place_changed\", () =>\r\n      handlePlaceSelect(updateQuery)\r\n    );\r\n  }\r\n\r\n  const handlePlaceSelect = (updateQuery) => {\r\n    const addressObject = autoComplete.getPlace();\r\n    const query = addressObject.formatted_address;\r\n    updateQuery(query);\r\n    console.log(addressObject);\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadScript(\r\n      `https://maps.googleapis.com/maps/api/js?key=AIzaSyCgNXXDm46LHt0rmgndPsBIrbIYNYLGsM8&libraries=places`,\r\n      () => handleScriptLoad(setQuery, autoCompleteRef)\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"search-location-input\">\r\n      <input\r\n        ref={autoCompleteRef}\r\n        onChange={event => setQuery(event.target.value)}\r\n        placeholder=\"Adress...\"\r\n        value={query}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GoogleAutocomplete;\r\n"]},"metadata":{},"sourceType":"module"}