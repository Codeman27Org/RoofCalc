{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cody\\\\Coding\\\\RealCalc\\\\RoofCalc\\\\frontend\\\\my-app\\\\src\\\\components\\\\PrincipalAndInterest.js\";\nimport React, { useState, useEffect } from 'react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { InputAdornment, TextField, ExpansionPanel, Typography, ExpansionPanelDetails, ExpansionPanelSummary, FormControl } from '@material-ui/core';\n\nconst PrincipalAndInterest = props => {\n  const [values, setValues] = useState({\n    zestimate: props.values.zestimates.zestimate.toLocaleString('en-US'),\n    downPayment: props.values.monthly_mortgage.down_payment.toLocaleString('en-US'),\n    downPaymentPerc: props.values.monthly_mortgage.down_payment_perc * 100,\n    loanType: '30-year',\n    //props.values.mortgage_rate.loan_type,\n    rate: (props.values.mortgage_rate.rate * 100).toString().slice(0, 5),\n    monthlyPayment: '',\n    percActive: false,\n    closingCosts: props.values.closing_costs.closing_costs.toLocaleString('en-US')\n  });\n\n  const monthlyPaymentCalc = (housePrice, downPayment, loanType, rate) => {\n    let loan = housePrice.toString().replace(/,/g, '') - downPayment.toString().replace(/,/g, '');\n    let numPayments = parseInt(loanType.substring(0, 2)) * 12; // 12 Months in year\n\n    let monthlyRate = parseFloat(rate / 100 / 12); // 12 Months in year\n\n    let monthlyPayment = Math.round(loan * (monthlyRate * Math.pow(1 + monthlyRate, numPayments)) / (Math.pow(1 + monthlyRate, numPayments) - 1)) || 0;\n    setValues({ ...values,\n      monthlyPayment: formatter.format(monthlyPayment)\n    });\n  };\n\n  const downPaymentCalc = (type, value, housePrice) => {\n    if (type === 'percent') {\n      setValues({ ...values,\n        downPayment: formatter.format(Math.round(value / 100 * housePrice.replace(/,/g, ''))).replace('$', '')\n      }); //divide by 100 to get it as a percent again\n    } else {\n      setValues({ ...values,\n        downPaymentPerc: (value.replace(/,/g, '') / housePrice.replace(/,/g, '') * 100).toFixed(1)\n      });\n    }\n  };\n\n  const handleChange = event => {\n    const re = /^[.,0-9\\b]+$/; // if value is not blank, then test the regex and only accept numbers\n\n    if (event.target.value === '' || re.test(event.target.value)) {\n      if (event.target.name === 'zestimate' || event.target.name === 'downPayment') {\n        setValues({ ...values,\n          [event.target.name]: formatter.format(event.target.value.toString().replace(/,/g, '')).replace('$', '')\n        });\n      } else {\n        setValues({ ...values,\n          [event.target.name]: event.target.value === '' ? 0 : event.target.value.replace(/\\b(?:0*(0\\.\\d+)|(^0+))/g, '$1')\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    props.changeValue(parseInt(values.zestimate.replace(',', '')), 'housePrice');\n    monthlyPaymentCalc(values.zestimate, values.downPayment, values.loanType, values.rate); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.zestimate, values.downPayment, values.downPaymentPerc, values.loanType, values.rate]);\n  useEffect(() => {\n    if (values.percActive) return; //Don't want current textfield changing while the user is changing it\n\n    downPaymentCalc('amount', values.downPayment, values.zestimate);\n    props.changeValue(parseInt(values.downPayment.toString().replace(/[$,]/g, '')), 'downPayment'); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.downPayment]);\n  useEffect(() => {\n    props.changeValue(parseInt(values.monthlyPayment.replace(/[$,]/g, '')), 'principalAndInterest'); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.monthlyPayment]);\n  useEffect(() => {\n    props.downPaymentPercChange(values.downPaymentPerc);\n    if (!values.percActive) return; //Don't want current textfield changing while the user is changing it\n\n    downPaymentCalc('percent', values.downPaymentPerc, values.zestimate); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.downPaymentPerc]);\n  useEffect(() => {\n    props.changeValue(parseInt(values.closingCosts.toString().replace(/[$,]/g, '')), 'loanCosts'); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values.closingCosts]);\n  useEffect(() => {\n    monthlyPaymentCalc(values.zestimate, values.downPayment, values.loanType, values.rate); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  return /*#__PURE__*/React.createElement(ExpansionPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ExpansionPanelSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      className: \"expand-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }),\n    \"aria-controls\": \"panel1a-content\",\n    id: \"panel1a-header\",\n    className: \"accordion-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Principal & Interest\"), /*#__PURE__*/React.createElement(Typography, {\n    className: \"accordion-total expenses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, values.monthlyPayment, \"/Mo\")), /*#__PURE__*/React.createElement(ExpansionPanelDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Home Price\",\n    variant: \"filled\",\n    name: \"zestimate\",\n    value: values.zestimate,\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, \"$\"))\n    },\n    onChange: (event, value) => handleChange(event, value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"two-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Down Payment\",\n    variant: \"filled\",\n    name: \"downPayment\",\n    value: values.downPayment,\n    fullWidth: true,\n    onFocus: () => setValues({ ...values,\n      percActive: false\n    }),\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      }, \"$\"))\n    },\n    onChange: (event, value) => handleChange(event, value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \" \",\n    variant: \"filled\",\n    name: \"downPaymentPerc\",\n    value: values.downPaymentPerc,\n    fullWidth: true,\n    onFocus: () => setValues({ ...values,\n      percActive: true\n    }),\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }\n      }, \"%\"))\n    },\n    onChange: (event, value) => handleChange(event, value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"two-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Loan Program\",\n    variant: \"filled\",\n    name: \"loanType\",\n    value: values.loanType,\n    fullWidth: true,\n    onChange: (event, value) => handleChange(event, value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Interest Rate\",\n    variant: \"filled\",\n    name: \"rate\",\n    value: values.rate,\n    fullWidth: true,\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }\n      }, \"%\"))\n    },\n    onChange: (event, value) => handleChange(event, value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Est. Loan Costs\",\n    variant: \"filled\",\n    name: \"closingCosts\",\n    onFocus: () => setValues({ ...values,\n      percActive: false\n    }),\n    fullWidth: true,\n    value: values.closingCosts,\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 23\n        }\n      }, \"$\"))\n    },\n    onChange: (event, value) => handleChange(event, value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default PrincipalAndInterest;","map":{"version":3,"sources":["C:/Users/Cody/Coding/RealCalc/RoofCalc/frontend/my-app/src/components/PrincipalAndInterest.js"],"names":["React","useState","useEffect","ExpandMoreIcon","InputAdornment","TextField","ExpansionPanel","Typography","ExpansionPanelDetails","ExpansionPanelSummary","FormControl","PrincipalAndInterest","props","values","setValues","zestimate","zestimates","toLocaleString","downPayment","monthly_mortgage","down_payment","downPaymentPerc","down_payment_perc","loanType","rate","mortgage_rate","toString","slice","monthlyPayment","percActive","closingCosts","closing_costs","monthlyPaymentCalc","housePrice","loan","replace","numPayments","parseInt","substring","monthlyRate","parseFloat","Math","round","pow","formatter","format","downPaymentCalc","type","value","toFixed","handleChange","event","re","target","test","name","changeValue","downPaymentPercChange","Intl","NumberFormat","style","currency","minimumFractionDigits","startAdornment","endAdornment"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {InputAdornment, TextField, ExpansionPanel, Typography, ExpansionPanelDetails, ExpansionPanelSummary, FormControl} from '@material-ui/core'\r\n\r\nconst PrincipalAndInterest = (props) => {\r\n  const [values, setValues] = useState({\r\n      zestimate: props.values.zestimates.zestimate.toLocaleString('en-US'),\r\n      downPayment: props.values.monthly_mortgage.down_payment.toLocaleString('en-US'),\r\n      downPaymentPerc: props.values.monthly_mortgage.down_payment_perc * 100,\r\n      loanType: '30-year',//props.values.mortgage_rate.loan_type,\r\n      rate: (props.values.mortgage_rate.rate * 100).toString().slice(0,5),\r\n      monthlyPayment: '',\r\n      percActive: false,\r\n      closingCosts: props.values.closing_costs.closing_costs.toLocaleString('en-US'),\r\n    })\r\n\r\n    const monthlyPaymentCalc = (housePrice, downPayment, loanType, rate) => {\r\n      let loan = housePrice.toString().replace(/,/g, '') - downPayment.toString().replace(/,/g, '')\r\n      let numPayments = parseInt(loanType.substring(0, 2)) * 12 // 12 Months in year\r\n      let monthlyRate = parseFloat((rate/100)/12) // 12 Months in year\r\n      let monthlyPayment = Math.round(loan*(monthlyRate*Math.pow((1 + monthlyRate), numPayments))/(Math.pow((1 + monthlyRate), numPayments) - 1)) || 0\r\n\r\n      setValues({...values, monthlyPayment: formatter.format(monthlyPayment)})\r\n    }\r\n\r\n    const downPaymentCalc = (type, value, housePrice) => {\r\n      if (type === 'percent') {\r\n        setValues({...values, downPayment: formatter.format(Math.round((value/100) * housePrice.replace(/,/g, ''))).replace('$', '')}) //divide by 100 to get it as a percent again\r\n      }\r\n      else {\r\n        setValues({...values, downPaymentPerc: (value.replace(/,/g, '')/housePrice.replace(/,/g, '') * 100).toFixed(1)})\r\n      }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n      const re = /^[.,0-9\\b]+$/;\r\n      // if value is not blank, then test the regex and only accept numbers\r\n      if (event.target.value === '' || re.test(event.target.value)) {\r\n        if (event.target.name === 'zestimate' || event.target.name === 'downPayment') {\r\n          setValues({ ...values, [event.target.name]: formatter.format(event.target.value.toString().replace(/,/g, '')).replace('$', '')})\r\n        }\r\n        else {\r\n          setValues({ ...values, [event.target.name]: event.target.value === '' ? 0 : event.target.value.replace(/\\b(?:0*(0\\.\\d+)|(^0+))/g, '$1')})\r\n        }\r\n      }\r\n    }\r\n\r\n  useEffect(() => {\r\n    props.changeValue(parseInt(values.zestimate.replace(',', '')), 'housePrice')\r\n    monthlyPaymentCalc(values.zestimate, values.downPayment, values.loanType, values.rate)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.zestimate, values.downPayment, values.downPaymentPerc, values.loanType, values.rate])\r\n\r\n  useEffect(() => {\r\n    if (values.percActive) return //Don't want current textfield changing while the user is changing it\r\n    downPaymentCalc('amount', values.downPayment, values.zestimate)\r\n    props.changeValue(parseInt(values.downPayment.toString().replace(/[$,]/g, '')), 'downPayment')\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.downPayment])\r\n\r\n  useEffect(() => {\r\n    props.changeValue(parseInt(values.monthlyPayment.replace(/[$,]/g, '')), 'principalAndInterest')\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.monthlyPayment])\r\n\r\n  useEffect(() => {\r\n    props.downPaymentPercChange(values.downPaymentPerc)\r\n    if (!values.percActive) return //Don't want current textfield changing while the user is changing it\r\n    downPaymentCalc('percent', values.downPaymentPerc, values.zestimate)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.downPaymentPerc])\r\n\r\n  useEffect(() => {\r\n    props.changeValue(parseInt(values.closingCosts.toString().replace(/[$,]/g, '')), 'loanCosts')\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.closingCosts])\r\n\r\n  useEffect(() => {\r\n   monthlyPaymentCalc(values.zestimate, values.downPayment, values.loanType, values.rate)\r\n   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0\r\n  })\r\n\r\n  return (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary\r\n      expandIcon={<ExpandMoreIcon className='expand-icon'/>}\r\n      aria-controls='panel1a-content'\r\n      id='panel1a-header'\r\n      className='accordion-summary'\r\n      >\r\n        <Typography>Principal & Interest</Typography>\r\n        <Typography className='accordion-total expenses'>{values.monthlyPayment}/Mo</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <FormControl fullWidth>\r\n        <TextField\r\n            label='Home Price'\r\n            variant='filled'\r\n            name='zestimate'\r\n            value={values.zestimate}\r\n            InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <p>$</p>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            onChange={(event, value)=> handleChange(event, value)}\r\n          />\r\n          <div className='two-column'>\r\n            <TextField\r\n                label='Down Payment'\r\n                variant='filled'\r\n                name='downPayment'\r\n                value={values.downPayment}\r\n                fullWidth={true}\r\n                onFocus={() => setValues({...values, percActive: false})}\r\n                InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <p>$</p>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                onChange={(event, value)=> handleChange(event, value)}\r\n            />\r\n            <TextField\r\n                label=' '\r\n                variant='filled'\r\n                name='downPaymentPerc'\r\n                value={values.downPaymentPerc}\r\n                fullWidth={true}\r\n                onFocus={() => setValues({...values, percActive: true})}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <p>%</p>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                onChange={(event, value)=> handleChange(event, value)}\r\n            />\r\n          </div>\r\n          <div className='two-column'>\r\n            <TextField\r\n                label='Loan Program'\r\n                variant='filled'\r\n                name='loanType'\r\n                value={values.loanType}\r\n                fullWidth={true}\r\n                onChange={(event, value)=> handleChange(event, value)}\r\n            />\r\n            <TextField\r\n                label='Interest Rate'\r\n                variant='filled'\r\n                name='rate'\r\n                value={values.rate}\r\n                fullWidth={true}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <p>%</p>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                onChange={(event, value)=> handleChange(event, value)}\r\n            />\r\n          </div>\r\n          <TextField\r\n              label='Est. Loan Costs'\r\n              variant='filled'\r\n              name='closingCosts'\r\n              onFocus={() => setValues({...values, percActive: false})}\r\n              fullWidth={true}\r\n              value={values.closingCosts}\r\n              InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <p>$</p>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              onChange={(event, value)=> handleChange(event, value)}\r\n            />\r\n        </FormControl>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  )\r\n}\r\n\r\nexport default PrincipalAndInterest\r\n"]},"metadata":{},"sourceType":"module"}