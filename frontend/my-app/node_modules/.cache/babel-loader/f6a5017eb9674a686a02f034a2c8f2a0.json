{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cody\\\\Coding\\\\RealCalc\\\\RoofCalc\\\\frontend\\\\my-app\\\\src\\\\components\\\\GoogleAutocomplete.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nlet autoComplete;\n\nconst loadScript = (url, callback) => {\n  let script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n\n  if (script.readyState) {\n    script.onreadystatechange = function () {\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n        script.onreadystatechange = null;\n        callback();\n      }\n    };\n  } else {\n    script.onload = () => callback();\n  }\n\n  script.src = url;\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\n};\n\nfunction handleScriptLoad(updateQuery, autoCompleteRef) {\n  autoComplete = new window.google.maps.places.Autocomplete(autoCompleteRef.current, {\n    types: ['address'],\n    componentRestrictions: {\n      country: \"us\"\n    }\n  });\n  autoComplete.setFields([\"address_components\", \"formatted_address\"]);\n  autoComplete.addListener(\"place_changed\", () => handlePlaceSelect(updateQuery));\n}\n\nasync function handlePlaceSelect(updateQuery) {\n  const addressObject = autoComplete.getPlace();\n  const query = addressObject.formatted_address;\n  updateQuery(query);\n  console.log(addressObject);\n}\n\nconst GoogleAutocomplete = props => {\n  const [query, setQuery] = useState(\"\");\n  const autoCompleteRef = useRef(null);\n  useEffect(() => {\n    loadScript(`https://maps.googleapis.com/maps/api/js?key=AIzaSyCgNXXDm46LHt0rmgndPsBIrbIYNYLGsM8&libraries=places`, () => handleScriptLoad(setQuery, autoCompleteRef));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-location-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: autoCompleteRef,\n    onChange: event => setQuery(event.target.value),\n    placeholder: \"Adress...\",\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default GoogleAutocomplete;","map":{"version":3,"sources":["C:/Users/Cody/Coding/RealCalc/RoofCalc/frontend/my-app/src/components/GoogleAutocomplete.js"],"names":["React","useState","useEffect","useRef","autoComplete","loadScript","url","callback","script","document","createElement","type","readyState","onreadystatechange","onload","src","getElementsByTagName","appendChild","handleScriptLoad","updateQuery","autoCompleteRef","window","google","maps","places","Autocomplete","current","types","componentRestrictions","country","setFields","addListener","handlePlaceSelect","addressObject","getPlace","query","formatted_address","console","log","GoogleAutocomplete","props","setQuery","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,IAAIC,YAAJ;;AAEA,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,QAAN,KAAmB;AACpC,MAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,EAAAA,MAAM,CAACG,IAAP,GAAc,iBAAd;;AAEA,MAAIH,MAAM,CAACI,UAAX,EAAuB;AACrBJ,IAAAA,MAAM,CAACK,kBAAP,GAA4B,YAAW;AACrC,UAAIL,MAAM,CAACI,UAAP,KAAsB,QAAtB,IAAkCJ,MAAM,CAACI,UAAP,KAAsB,UAA5D,EAAwE;AACtEJ,QAAAA,MAAM,CAACK,kBAAP,GAA4B,IAA5B;AACAN,QAAAA,QAAQ;AACT;AACF,KALD;AAMD,GAPD,MAOO;AACLC,IAAAA,MAAM,CAACM,MAAP,GAAgB,MAAMP,QAAQ,EAA9B;AACD;;AAEDC,EAAAA,MAAM,CAACO,GAAP,GAAaT,GAAb;AACAG,EAAAA,QAAQ,CAACO,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,WAAzC,CAAqDT,MAArD;AACD,CAjBD;;AAmBA,SAASU,gBAAT,CAA0BC,WAA1B,EAAuCC,eAAvC,EAAwD;AACtDhB,EAAAA,YAAY,GAAG,IAAIiB,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,MAAnB,CAA0BC,YAA9B,CACbL,eAAe,CAACM,OADH,EAEb;AAAEC,IAAAA,KAAK,EAAE,CAAC,SAAD,CAAT;AAAsBC,IAAAA,qBAAqB,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;AAA7C,GAFa,CAAf;AAIAzB,EAAAA,YAAY,CAAC0B,SAAb,CAAuB,CAAC,oBAAD,EAAuB,mBAAvB,CAAvB;AACA1B,EAAAA,YAAY,CAAC2B,WAAb,CAAyB,eAAzB,EAA0C,MACxCC,iBAAiB,CAACb,WAAD,CADnB;AAGD;;AAED,eAAea,iBAAf,CAAiCb,WAAjC,EAA8C;AAC5C,QAAMc,aAAa,GAAG7B,YAAY,CAAC8B,QAAb,EAAtB;AACA,QAAMC,KAAK,GAAGF,aAAa,CAACG,iBAA5B;AACAjB,EAAAA,WAAW,CAACgB,KAAD,CAAX;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;AACD;;AAED,MAAMM,kBAAkB,GAAIC,KAAD,IAAW;AACpC,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBxC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMmB,eAAe,GAAGjB,MAAM,CAAC,IAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,UAAU,CACP,sGADO,EAER,MAAMa,gBAAgB,CAACuB,QAAD,EAAWrB,eAAX,CAFd,CAAV;AAID,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEA,eADP;AAEE,IAAA,QAAQ,EAAEsB,KAAK,IAAID,QAAQ,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAF7B;AAGE,IAAA,WAAW,EAAC,WAHd;AAIE,IAAA,KAAK,EAAET,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD,CArBD;;AAuBA,eAAeI,kBAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nlet autoComplete;\r\n\r\nconst loadScript = (url, callback) => {\r\n  let script = document.createElement(\"script\");\r\n  script.type = \"text/javascript\";\r\n\r\n  if (script.readyState) {\r\n    script.onreadystatechange = function() {\r\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\r\n        script.onreadystatechange = null;\r\n        callback();\r\n      }\r\n    };\r\n  } else {\r\n    script.onload = () => callback();\r\n  }\r\n\r\n  script.src = url;\r\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\r\n};\r\n\r\nfunction handleScriptLoad(updateQuery, autoCompleteRef) {\r\n  autoComplete = new window.google.maps.places.Autocomplete(\r\n    autoCompleteRef.current,\r\n    { types: ['address'], componentRestrictions: { country: \"us\" } }\r\n  );\r\n  autoComplete.setFields([\"address_components\", \"formatted_address\"]);\r\n  autoComplete.addListener(\"place_changed\", () =>\r\n    handlePlaceSelect(updateQuery)\r\n  );\r\n}\r\n\r\nasync function handlePlaceSelect(updateQuery) {\r\n  const addressObject = autoComplete.getPlace();\r\n  const query = addressObject.formatted_address;\r\n  updateQuery(query);\r\n  console.log(addressObject);\r\n}\r\n\r\nconst GoogleAutocomplete = (props) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const autoCompleteRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    loadScript(\r\n      `https://maps.googleapis.com/maps/api/js?key=AIzaSyCgNXXDm46LHt0rmgndPsBIrbIYNYLGsM8&libraries=places`,\r\n      () => handleScriptLoad(setQuery, autoCompleteRef)\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"search-location-input\">\r\n      <input\r\n        ref={autoCompleteRef}\r\n        onChange={event => setQuery(event.target.value)}\r\n        placeholder=\"Adress...\"\r\n        value={query}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GoogleAutocomplete;\r\n"]},"metadata":{},"sourceType":"module"}