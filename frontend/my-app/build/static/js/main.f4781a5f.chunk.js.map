{"version":3,"sources":["RealEstateAPI.js","components/GoogleAutocomplete.js","components/SearchPage.js","components/PrincipalAndInterest.js","components/Insurance.js","components/FloodInsurance.js","components/PropertyTaxes.js","components/RentalIncome.js","components/Metrics.js","components/RehabCosts.js","components/Utilities.js","components/Results.js","components/App.js","serviceWorker.js","index.js","RoofCalc.png"],"names":["getAll","address","fetch","then","response","ok","Error","statusText","json","data","GoogleAutocomplete","props","autoComplete","useState","query","setQuery","autoCompleteRef","useRef","handlePlaceSelect","updateQuery","getPlace","formatted_address","useEffect","updateAddress","url","callback","script","document","createElement","type","readyState","onreadystatechange","onload","src","getElementsByTagName","appendChild","loadScript","window","google","maps","places","Autocomplete","current","types","componentRestrictions","country","setFields","addListener","handleScriptLoad","className","TextField","inputRef","error","badAddress","helperText","onChange","event","target","value","placeholder","InputProps","endAdornment","InputAdornment","position","onClick","disabled","updateError","disableButton","color","SearchPage","values","setValues","action","logo","alt","LinearProgress","style","width","Button","variant","search","inputAddress","PrincipalAndInterest","zestimate","zestimates","toLocaleString","downPayment","monthly_mortgage","down_payment","downPaymentPerc","down_payment_perc","loanType","rate","mortgage_rate","toString","slice","monthlyPayment","percActive","closingCosts","closing_costs","monthlyPaymentCalc","housePrice","loan","replace","numPayments","parseInt","substring","monthlyRate","parseFloat","Math","round","pow","formatter","format","downPaymentCalc","toFixed","handleChange","test","name","match","changeValue","downPaymentPercChange","Intl","NumberFormat","currency","minimumFractionDigits","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","id","Typography","ExpansionPanelDetails","FormControl","fullWidth","label","startAdornment","onFocus","Insurance","pmiChecked","pmi","yearly","fiChecked","fi","pi","marginBottom","marginRight","Tooltip","title","enterTouchDelay","FloodInsurance","Checkbox","PropertyTaxes","taxAmount","taxes","tax_amt_yr","taxRate","tax_rate","taxAmountCalc","RentalIncome","rentAmount","rent_zestimate","vacancyAmount","vacancyRate","repairsAmount","repairsRate","propertyManagementAmount","propertyManagementRate","includes","rentAmountInt","monthlyPaymentAmount","Metrics","sign","netIncome","abs","isFinite","cashOnCashReturn","capRate","RehabCosts","rehabCosts","Utilities","waterCost","energyCost","hoaCost","waterCostInt","energyCostInt","hoaCostInt","Results","netRentalIncome","grossRentalIncome","principalAndInterest","insurance","floodInsurance","propertyTaxes","loanCosts","utilities","results","switch","theme","createMuiTheme","palette","primary","teal","overrides","MuiInputLabel","root","App","state","showResults","switchScreens","setState","input","RealEstateAPI","transformFromDir","this","transformLeaveDir","items","initial","from","opacity","transform","enter","leave","Component","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message","module","exports"],"mappings":"4LAGaA,EAAS,SAACC,GAAD,OACpBC,MAAM,GAAD,OAHK,4DAGL,6BAA4BD,IAC/BE,MAAK,SAAAC,GACJ,IAAIA,EAASC,GACX,MAAMC,MAAMF,EAASG,YAEvB,OAAOH,EAASI,UAEjBL,MAAK,SAAAM,GACJ,OAAOA,M,4EC6EGC,EArFY,SAACC,GAAW,IAIjCC,EAJgC,EACVC,mBAAS,IADC,mBAC7BC,EAD6B,KACtBC,EADsB,KAE9BC,EAAkBC,iBAAO,MAkCzBC,EAAoB,SAACC,GAGzBA,EAFsBP,EAAaQ,WACPC,oBAyB9B,OAbAC,qBAAU,WACRX,EAAMY,cAAcT,KAEnB,CAACA,IAEJQ,qBAAU,YAjDS,SAACE,EAAKC,GACvB,IAAIC,EAASC,SAASC,cAAc,UACpCF,EAAOG,KAAO,kBAEVH,EAAOI,WACTJ,EAAOK,mBAAqB,WACA,WAAtBL,EAAOI,YAAiD,aAAtBJ,EAAOI,aAC3CJ,EAAOK,mBAAqB,KAC5BN,MAIJC,EAAOM,OAAS,kBAAMP,KAGxBC,EAAOO,IAAMT,EACbG,SAASO,qBAAqB,QAAQ,GAAGC,YAAYT,GAkCrDU,CAAW,wGAET,kBAjCqB,SAACjB,EAAaH,IACrCJ,EAAe,IAAIyB,OAAOC,OAAOC,KAAKC,OAAOC,aAC3CzB,EAAgB0B,QAChB,CAAEC,MAAO,CAAC,WAAYC,sBAAuB,CAAEC,QAAS,SAE7CC,UAAU,CAAC,qBAAsB,sBAC9ClC,EAAamC,YAAY,iBAAiB,kBACxC7B,EAAkBC,MA0BZ6B,CAAiBjC,EAAUC,QAGlC,IAGD,yBAAKiC,UAAU,cACX,kBAACC,EAAA,EAAD,CACED,UAAU,wBACVE,SAAUnC,EACVoC,MAAOzC,EAAM0C,WACbC,WAAY3C,EAAM0C,WAAa,oBAAsB,GACrDE,SAAU,SAAAC,GAAK,OAAIzC,EAASyC,EAAMC,OAAOC,QACzCC,YAAY,aACZD,MAAO5C,EACP8C,WAAY,CACRC,aACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACvB,uBAAGd,UAAU,aAAae,QAAU,WAjC9CrD,EAAMsD,WACRlD,EAAS,IACTJ,EAAMuD,cACNvD,EAAMwD,mBA8BiErD,GAAS,kBAAC,IAAD,CAAkBmC,UAAU,cAAcmB,MAAM,mB,iBC/BvHC,EA3CI,SAAC1D,GAAW,IAAD,EACEE,mBAAS,CACjCoD,UAAU,IAFY,mBACnBK,EADmB,KACXC,EADW,KAKpBJ,EAAgB,WAAyB,IAAxBK,EAAuB,uDAAd,UAE5BD,EADa,WAAXC,EACQ,SAACF,GAAD,sBAAiBA,EAAjB,CAAyBL,UAAU,KAGnC,SAACK,GAAD,sBAAiBA,EAAjB,CAAyBL,UAAU,OASjD,OACE,yBAAKhB,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKhB,IAAKwC,IAAMC,IAAI,OAAOzB,UAAU,SACrC,uBAAGA,UAAU,mBAAb,iCACA,kBAAC,EAAD,CACE1B,cAAeZ,EAAMY,cACrB8B,WAAY1C,EAAM0C,WAClBa,YAAavD,EAAMuD,YACnBC,cAAeA,EACfF,SAAUK,EAAOL,WAEpBK,EAAOL,WAAatD,EAAM0C,YAAc,kBAACsB,EAAA,EAAD,CAAgBC,MAAO,CAAEC,MAAO,UAEzE,yBAAK5B,UAAU,iBACb,kBAAC6B,EAAA,EAAD,CAAQC,QAAQ,WAAWX,MAAM,UAAUJ,QApB7B,WAClBG,EAAc,UACdxD,EAAMqE,OAAOrE,EAAMsE,eAmBbhB,SAAUK,EAAOL,WAAatD,EAAM0C,YADtC,a,sEC2JK6B,EA/Lc,SAACvE,GAAW,IAAD,EACVE,mBAAS,CACjCsE,UAAWxE,EAAM2D,OAAOc,WAAWD,UAAUE,eAAe,SAC5DC,YAAa3E,EAAM2D,OAAOiB,iBAAiBC,aAAaH,eAAe,SACvEI,gBAAmE,IAAlD9E,EAAM2D,OAAOiB,iBAAiBG,kBAC/CC,SAAU,UACVC,MAAyC,IAAlCjF,EAAM2D,OAAOuB,cAAcD,MAAYE,WAAWC,MAAM,EAAE,GACjEC,eAAgB,GAChBC,YAAY,EACZC,aAAcvF,EAAM2D,OAAO6B,cAAcA,cAAcd,eAAe,WATpC,mBAC/Bf,EAD+B,KACvBC,EADuB,KAY9B6B,EAAqB,SAACC,EAAYf,EAAaK,EAAUC,GAC7D,IAAIU,EAAOD,EAAWP,WAAWS,QAAQ,KAAM,IAAMjB,EAAYQ,WAAWS,QAAQ,KAAM,IACtFC,EAAmD,GAArCC,SAASd,EAASe,UAAU,EAAG,IAC7CC,EAAcC,WAAYhB,EAAK,IAAK,IACpCI,EAAiBa,KAAKC,MAAMR,GAAMK,EAAYE,KAAKE,IAAK,EAAIJ,EAAcH,KAAeK,KAAKE,IAAK,EAAIJ,EAAcH,GAAe,KAAO,EAE/IjC,EAAU,eAAID,EAAL,CAAa0B,eAAgBgB,EAAUC,OAAOjB,OAGnDkB,EAAkB,SAACrF,EAAM6B,EAAO2C,GAElC9B,EADW,YAAT1C,EACQ,eAAIyC,EAAL,CAAagB,YAAa0B,EAAUC,OAAOJ,KAAKC,MAAOpD,EAAM,IAAO2C,EAAWE,QAAQ,KAAM,MAAMA,QAAQ,IAAK,MAG/G,eAAIjC,EAAL,CAAamB,iBAAkB/B,EAAM6C,QAAQ,KAAM,IAAIF,EAAWE,QAAQ,KAAM,IAAM,KAAKY,QAAQ,OAI1GC,EAAe,SAAC5D,IAGO,KAAvBA,EAAMC,OAAOC,OAFN,eAEyB2D,KAAK7D,EAAMC,OAAOC,UAC1B,cAAtBF,EAAMC,OAAO6D,MAA8C,gBAAtB9D,EAAMC,OAAO6D,MAAgD,iBAAtB9D,EAAMC,OAAO6D,KAC3F/C,EAAU,eAAKD,EAAN,eAAed,EAAMC,OAAO6D,KAAON,EAAUC,OAAOzD,EAAMC,OAAOC,MAAMoC,WAAWS,QAAQ,KAAM,KAAKA,QAAQ,IAAK,OAEpH/C,EAAMC,OAAOC,MAAM6D,MAAM,mBAChChD,EAAU,eAAKD,EAAN,eAAed,EAAMC,OAAO6D,KAA8B,KAAvB9D,EAAMC,OAAOC,MAAe,EAAIF,EAAMC,OAAOC,MAAM6C,QAAQ,YAAa,WAK5HjF,qBAAU,WACRX,EAAM6G,YAAYf,SAASnC,EAAOa,UAAUoB,QAAQ,IAAK,KAAM,cAC/DH,EAAmB9B,EAAOa,UAAWb,EAAOgB,YAAahB,EAAOqB,SAAUrB,EAAOsB,QAEhF,CAACtB,EAAOa,UAAWb,EAAOgB,YAAahB,EAAOmB,gBAAiBnB,EAAOqB,SAAUrB,EAAOsB,OAE1FtE,qBAAU,WACJgD,EAAO2B,aACXiB,EAAgB,SAAU5C,EAAOgB,YAAahB,EAAOa,WACrDxE,EAAM6G,YAAYf,SAASnC,EAAOgB,YAAYQ,WAAWS,QAAQ,QAAS,KAAM,kBAE/E,CAACjC,EAAOgB,cAEXhE,qBAAU,WACRX,EAAM6G,YAAYf,SAASnC,EAAO0B,eAAeO,QAAQ,QAAS,KAAM,0BAEvE,CAACjC,EAAO0B,iBAEX1E,qBAAU,WACRX,EAAM8G,sBAAsBnD,EAAOmB,iBAC9BnB,EAAO2B,YACZiB,EAAgB,UAAW5C,EAAOmB,gBAAiBnB,EAAOa,aAEzD,CAACb,EAAOmB,kBAEXnE,qBAAU,WACRX,EAAM6G,YAAYf,SAASnC,EAAO4B,aAAaJ,WAAWS,QAAQ,QAAS,KAAM,eAEhF,CAACjC,EAAO4B,eAEX5E,qBAAU,WACT8E,EAAmB9B,EAAOa,UAAWb,EAAOgB,YAAahB,EAAOqB,SAAUrB,EAAOsB,QAE/E,IAEH,IAAMoB,EAAY,IAAIU,KAAKC,aAAa,QAAS,CAC/C/C,MAAO,WACPgD,SAAU,MACVC,sBAAuB,IAGzB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACAC,WAAY,kBAAC,IAAD,CAAgB/E,UAAU,gBACtCgF,gBAAc,kBACdC,GAAG,iBACHjF,UAAU,qBAER,kBAACkF,EAAA,EAAD,6BACA,kBAACA,EAAA,EAAD,CAAYlF,UAAU,4BAA4BqB,EAAO0B,eAAzD,QAEF,kBAACoC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACtB,kBAACpF,EAAA,EAAD,CACIqF,MAAM,aACNxD,QAAQ,SACRuC,KAAK,YACL5D,MAAOY,EAAOa,UACdvB,WAAY,CACR4E,eACE,kBAAC1E,EAAA,EAAD,CAAgBC,SAAS,SACvB,kCAIRR,SAAU,SAACC,GAAD,OAAU4D,EAAa5D,MAEnC,yBAAKP,UAAU,cACb,kBAACC,EAAA,EAAD,CACIqF,MAAM,eACNxD,QAAQ,SACRuC,KAAK,cACL5D,MAAOY,EAAOgB,YACdgD,WAAW,EACXG,QAAS,kBAAMlE,EAAU,eAAID,EAAL,CAAa2B,YAAY,MACjDrC,WAAY,CACR4E,eACE,kBAAC1E,EAAA,EAAD,CAAgBC,SAAS,SACvB,kCAIRR,SAAU,SAACC,GAAD,OAAU4D,EAAa5D,MAErC,kBAACN,EAAA,EAAD,CACIqF,MAAM,IACNxD,QAAQ,SACRuC,KAAK,kBACL5D,MAAOY,EAAOmB,gBACd6C,WAAW,EACXG,QAAS,kBAAMlE,EAAU,eAAID,EAAL,CAAa2B,YAAY,MACjDrC,WAAY,CACRC,aACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACvB,kCAIRR,SAAU,SAACC,GAAD,OAAU4D,EAAa5D,OAGvC,yBAAKP,UAAU,cACb,kBAACC,EAAA,EAAD,CACIqF,MAAM,eACNxD,QAAQ,SACRuC,KAAK,WACL5D,MAAOY,EAAOqB,SACd2C,WAAW,EACX/E,SAAU,SAACC,GAAD,OAAU4D,EAAa5D,MAErC,kBAACN,EAAA,EAAD,CACIqF,MAAM,gBACNxD,QAAQ,SACRuC,KAAK,OACL5D,MAAOY,EAAOsB,KACd0C,WAAW,EACX1E,WAAY,CACRC,aACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACvB,kCAIRR,SAAU,SAACC,GAAD,OAAU4D,EAAa5D,OAGvC,kBAACN,EAAA,EAAD,CACIqF,MAAM,kBACNxD,QAAQ,SACRuC,KAAK,eACLgB,WAAW,EACX5E,MAAOY,EAAO4B,aACdtC,WAAY,CACR4E,eACE,kBAAC1E,EAAA,EAAD,CAAgBC,SAAS,SACvB,kCAIRR,SAAU,SAACC,GAAD,OAAU4D,EAAa5D,U,0BC1EhCkF,EA5GG,SAAC/H,GAAW,IAAD,EACCE,mBAAS,CACjC8H,YAAY,EACZC,IAAKjI,EAAM2D,OAAOsE,IAAIC,OAAOxD,eAAe,SAC5CyD,WAAW,EACXC,GAAIpI,EAAM2D,OAAOyE,GAAGF,OAAOxD,eAAe,SAC1C2D,GAAIrI,EAAM2D,OAAO0E,GAAGH,OAAOxD,eAAe,SAC1CW,eAAgB,IAPO,mBACpB1B,EADoB,KACZC,EADY,KAU3BjD,qBAAU,WACRiD,EAAU,eAAKD,EAAN,CAAcqE,WAAalC,SAAS9F,EAAM8E,iBAAmB,QAErE,CAAC9E,IAEJW,qBAAU,WACRX,EAAM6G,YAAYf,SAASnC,EAAO0B,eAAeF,WAAWS,QAAQ,IAAK,KAAM,eAE9E,CAACjC,EAAO0B,iBAEX1E,qBAAU,WACR,IAAIsH,EAAMtE,EAAOqE,WAAalC,SAASnC,EAAOsE,IAAIrC,QAAQ,KAAM,KAAO,EACnEyC,EAAKvC,SAASnC,EAAO0E,GAAGzC,QAAQ,KAAM,KAE1ChC,EAAU,eAAKD,EAAN,CAAc0B,eAAgBgB,EAAUC,SAAS2B,EAAMI,GAAI,IAAI7B,QAAQ,SAE/E,CAAC7C,EAAOsE,IAAKtE,EAAOqE,WAAYrE,EAAO0E,KAE1C,IAAM5B,EAAe,SAAC5D,EAAOE,IAGA,KAAvBF,EAAMC,OAAOC,OAFN,eAEyB2D,KAAK7D,EAAMC,OAAOC,SACpDa,EAAU,eAAKD,EAAN,eAAed,EAAMC,OAAO6D,KAAON,EAAUC,OAAOzD,EAAMC,OAAOC,MAAMoC,WAAWS,QAAQ,KAAM,KAAKA,QAAQ,IAAK,QAIzHS,EAAY,IAAIU,KAAKC,aAAa,QAAS,CAC/C/C,MAAO,WACPgD,SAAU,MACVC,sBAAuB,IAGzB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACAC,WAAY,kBAAC,IAAD,CAAgB/E,UAAU,gBACtCgF,gBAAc,kBACdC,GAAG,iBACHjF,UAAU,qBAER,kBAACkF,EAAA,EAAD,kBACA,kBAACA,EAAA,EAAD,CAAYlF,UAAU,4BAA4BqB,EAAO0B,eAAzD,QAEF,kBAACoC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACpB,kBAACpF,EAAA,EAAD,CACIqF,MAAM,qBACNjB,KAAK,KACLvC,QAAQ,SACRrB,MAAOY,EAAO0E,GACdpF,WAAY,CACR4E,eACE,kBAAC1E,EAAA,EAAD,CAAgBC,SAAS,SACvB,iCAGJF,aACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACzB,uBAAGa,MAAO,CAACqE,aAAc,MAAOC,YAAa,SAA7C,WAIN3F,SAAU,SAACC,EAAOE,GAAR,OAAiB0D,EAAa5D,MAE1C,kBAACN,EAAA,EAAD,CACIqF,MAAM,qBACNjB,KAAK,MACLvC,QAAQ,SACRd,UAAWK,EAAOqE,WAClBjF,MAAOY,EAAOqE,WAAarE,EAAOsE,IAAM,EACxChF,WAAY,CACR4E,eACE,kBAAC1E,EAAA,EAAD,CAAgBC,SAAS,SACvB,iCAGJF,aACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACzB,uBAAGa,MAAO,CAACqE,aAAc,MAAOC,YAAa,SAA7C,SACA,kBAACC,EAAA,EAAD,CACEC,MAAM,gEACNC,gBAAiB,KAEjB,kBAAC,IAAD,CACEpG,UAAU,iBAMpBM,SAAU,SAACC,EAAOE,GAAR,OAAiB0D,EAAa5D,U,SChBzC8F,EApFQ,SAAC3I,GAAW,IAAD,EACJE,mBAAS,CACjCiI,WAAW,EACXC,GAAIpI,EAAM2D,OAAOyE,GAAGF,OAAOxD,eAAe,SAC1CW,eAAgB,IAJY,mBACzB1B,EADyB,KACjBC,EADiB,KAOhCjD,qBAAU,WACRX,EAAM6G,YAAYf,SAASnC,EAAO0B,eAAeF,WAAWS,QAAQ,IAAK,KAAM,oBAE9E,CAACjC,EAAO0B,iBAEX1E,qBAAU,WACR,IAAIyH,EAAKzE,EAAOwE,UAAYrC,SAASnC,EAAOyE,GAAGxC,QAAQ,KAAM,KAAO,EAEpEhC,EAAU,eAAKD,EAAN,CAAc0B,eAAgBgB,EAAUC,QAAQ8B,EAAG,IAAI5B,QAAQ,SAEvE,CAAC7C,EAAOyE,GAAIzE,EAAOwE,YAEtB,IAQM9B,EAAY,IAAIU,KAAKC,aAAa,QAAS,CAC/C/C,MAAO,WACPgD,SAAU,MACVC,sBAAuB,IAGzB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACAC,WAAY,kBAAC,IAAD,CAAgB/E,UAAU,gBACtCgF,gBAAc,kBACdC,GAAG,iBACHjF,UAAU,qBAER,kBAACkF,EAAA,EAAD,wBACA,kBAACA,EAAA,EAAD,CAAYlF,UAAU,4BAA4BqB,EAAO0B,eAAzD,QAEF,kBAACoC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACpB,yBAAKrF,UAAU,cACb,kBAACsG,EAAA,EAAD,CACEnF,MAAM,UACNb,SAAU,SAACC,GAAWe,EAAU,eAAKD,EAAN,CAAcwE,WAAYxE,EAAOwE,gBAElE,kBAAC5F,EAAA,EAAD,CACIqF,MAAM,kBACNjB,KAAK,KACLvC,QAAQ,SACRd,UAAWK,EAAOwE,UAClBpF,MAAOY,EAAOwE,UAAYxE,EAAOyE,GAAK,EACtCnF,WAAY,CACR4E,eACE,kBAAC1E,EAAA,EAAD,CAAgBC,SAAS,SACvB,iCAGJF,aACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACzB,uBAAGa,MAAO,CAACqE,aAAc,MAAOC,YAAa,SAA7C,SACA,kBAACC,EAAA,EAAD,CACEC,MAAM,gFACNC,gBAAiB,GAEjB,kBAAC,IAAD,SAKR9F,SAAU,SAACC,EAAOE,GAAR,OAxDH,SAACF,EAAOE,IAGA,KAAvBF,EAAMC,OAAOC,OAFN,eAEyB2D,KAAK7D,EAAMC,OAAOC,SACpDa,EAAU,eAAKD,EAAN,eAAed,EAAMC,OAAO6D,KAAON,EAAUC,OAAOzD,EAAMC,OAAOC,MAAMoC,WAAWS,QAAQ,KAAM,KAAKA,QAAQ,IAAK,OAoDtFa,CAAa5D,WCuCzCgG,EAnHO,SAAC7I,GAAW,IAAD,EACHE,mBAAS,CACjC4I,UAAW9I,EAAM2D,OAAOoF,MAAMC,WAAWtE,eAAe,SACxDuE,SAAwC,IAA9BjJ,EAAM2D,OAAOoF,MAAMG,UAAgB/D,WAAWC,MAAM,EAAE,GAChEC,eAAgB,GAChBC,YAAY,IALe,mBACxB3B,EADwB,KAChBC,EADgB,KAQvBuF,EAAgB,SAACjI,EAAM6B,EAAO2C,GAEhC9B,EADW,YAAT1C,EACQ,eAAIyC,EAAL,CAAamF,UAAWzC,EAAUC,OAAOJ,KAAKC,MAAOpD,EAAM,IAAO+C,SAASJ,EAAWP,WAAWS,QAAQ,KAAM,OAAOA,QAAQ,IAAK,MAGlI,eAAIjC,EAAL,CAAasF,SAAWnD,SAAS/C,EAAMoC,WAAWS,QAAQ,KAAM,KAAKE,SAASJ,EAAWP,WAAWS,QAAQ,KAAM,KAAQ,KAAKY,QAAQ,OAI9IC,EAAe,SAAC5D,IAGO,KAAvBA,EAAMC,OAAOC,OAFN,eAEyB2D,KAAK7D,EAAMC,OAAOC,UAC1B,cAAtBF,EAAMC,OAAO6D,KACf/C,EAAU,eAAKD,EAAN,eAAed,EAAMC,OAAO6D,KAAON,EAAUC,OAAOzD,EAAMC,OAAOC,MAAMoC,WAAWS,QAAQ,KAAM,KAAKA,QAAQ,IAAK,OAClH/C,EAAMC,OAAOC,MAAM6D,MAAM,mBAClChD,EAAU,eAAKD,EAAN,eAAed,EAAMC,OAAO6D,KAA8B,KAAvB9D,EAAMC,OAAOC,MAAe,EAAIF,EAAMC,OAAOC,MAAM6C,QAAQ,YAAa,WAK5HjF,qBAAU,WACRX,EAAM6G,YAAYf,SAASnC,EAAO0B,eAAeO,QAAQ,IAAK,KAAM,mBAEnE,CAACjC,EAAO0B,iBAEX1E,qBAAU,WACRiD,EAAU,eAAKD,EAAN,CAAc0B,eAAgBgB,EAAUC,OAAOJ,KAAKC,MAAMxC,EAAOmF,UAAUlD,QAAQ,KAAM,IAAI,UAErG,CAACjC,EAAOmF,UAAWnF,EAAOsF,UAE7BtI,qBAAU,WACJgD,EAAO2B,YACX6D,EAAc,SAAUxF,EAAOmF,UAAW9I,EAAM0F,cAE/C,CAAC/B,EAAOmF,YAEXnI,qBAAU,WACHgD,EAAO2B,YACZ6D,EAAc,UAAWxF,EAAOsF,QAASjJ,EAAM0F,cAE9C,CAAC/B,EAAOsF,UAEXtI,qBAAU,WACRiD,EAAU,eAAKD,EAAN,CAAc0B,eAAgBgB,EAAUC,OAAOJ,KAAKC,MAAMxC,EAAOmF,UAAUlD,QAAQ,KAAM,IAAI,UAErG,IAEH,IAAMS,EAAY,IAAIU,KAAKC,aAAa,QAAS,CAC/C/C,MAAO,WACPgD,SAAU,MACVC,sBAAuB,IAGzB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACAC,WAAY,kBAAC,IAAD,CAAgB/E,UAAU,gBACtCgF,gBAAc,kBACdC,GAAG,iBACHjF,UAAU,qBAER,kBAACkF,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,CAAYlF,UAAU,4BAA4BqB,EAAO0B,eAAzD,QAEF,kBAACoC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACpB,yBAAKrF,UAAU,cACb,kBAACC,EAAA,EAAD,CACIqF,MAAM,aACNxD,QAAQ,SACRuC,KAAK,YACL5D,MAAOY,EAAOmF,UACdnB,WAAW,EACXG,QAAS,kBAAMlE,EAAU,eAAID,EAAL,CAAa2B,YAAY,MACjDrC,WAAY,CACR4E,eACE,kBAAC1E,EAAA,EAAD,CAAgBC,SAAS,SACvB,kCAIRR,SAAU,SAACC,EAAOE,GAAR,OAAiB0D,EAAa5D,MAE5C,kBAACN,EAAA,EAAD,CACIqF,MAAM,WACNxD,QAAQ,SACRuC,KAAK,UACL5D,MAAOY,EAAOsF,QACdtB,WAAW,EACXG,QAAS,kBAAMlE,EAAU,eAAID,EAAL,CAAa2B,YAAY,MACjDrC,WAAY,CACRC,aACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACvB,kCAIRR,SAAU,SAACC,EAAOE,GAAR,OAAiB0D,EAAa5D,WCiGzCuG,EA3MM,SAACpJ,GAAW,IAAD,EACFE,mBAAS,CACjCmJ,WAAYrJ,EAAM2D,OAAOc,WAAW6E,eAAe5E,eAAe,SAClEW,eAAgBrF,EAAM2D,OAAOc,WAAW6E,eAAe5E,eAAe,SACtE6E,eAAyD,GAAzCvJ,EAAM2D,OAAOc,WAAW6E,gBAAsB5E,eAAe,SAC7E8E,YAAa,GACbC,eAAyD,GAAzCzJ,EAAM2D,OAAOc,WAAW6E,gBAAsB5E,eAAe,SAC7EgF,YAAa,GACbC,0BAAoE,GAAzC3J,EAAM2D,OAAOc,WAAW6E,gBAAsB5E,eAAe,SACxFkF,uBAAwB,KATE,mBACvBjG,EADuB,KACfC,EADe,KAYtB6C,EAAe,SAAC5D,IAGO,KAAvBA,EAAMC,OAAOC,OAFN,eAEyB2D,KAAK7D,EAAMC,OAAOC,UAChDF,EAAMC,OAAO6D,KAAKkD,SAAS,UAC7BjG,EAAU,eAAKD,EAAN,eAAed,EAAMC,OAAO6D,KAAON,EAAUC,OAAOzD,EAAMC,OAAOC,MAAMoC,WAAWS,QAAQ,KAAM,KAAKA,QAAQ,IAAK,OAClH/C,EAAMC,OAAOC,MAAM6D,MAAM,mBAChChD,EAAU,eAAKD,EAAN,eAAed,EAAMC,OAAO6D,KAA8B,KAAvB9D,EAAMC,OAAOC,MAAe,EAAIF,EAAMC,OAAOC,MAAM6C,QAAQ,YAAa,WAKxHP,EAAiB,WACrB,IAAIyE,EAAgBhE,SAASnC,EAAO0F,WAAWlE,WAAWS,QAAQ,KAAM,KAIpEmE,EAAuBD,GAHJhE,SAASnC,EAAO4F,cAAcpE,WAAWS,QAAQ,KAAM,KACxDE,SAASnC,EAAO8F,cAActE,WAAWS,QAAQ,KAAM,KAC3CE,SAASnC,EAAOgG,yBAAyBxE,WAAWS,QAAQ,KAAM,MAGpGhC,EAAU,eAAID,EAAL,CAAa0B,eAAgBgB,EAAUC,OAAOyD,MACvD/J,EAAM6G,YAAYkD,EAAsB,mBACxC/J,EAAM6G,YAAYiD,EAAe,sBAGnCnJ,qBAAU,WACR0E,MAEC,CAAC1B,EAAO4F,cAAe5F,EAAO0F,WAAY1F,EAAO8F,cAAe9F,EAAOgG,2BAE1EhJ,qBAAU,WACRiD,GAAU,SAACD,GAAD,sBAAkBA,EAAlB,CAA0B4F,cAAelD,EAAUC,OAAO3C,EAAO0F,WAAWlE,WAAWS,QAAQ,KAAM,IAAMjC,EAAO6F,YAAY,KAAK5D,QAAQ,IAAK,WAEzJ,CAACjC,EAAO6F,YAAa7F,EAAO0F,aAE/B1I,qBAAU,WACRiD,GAAU,SAACD,GAAD,sBAAkBA,EAAlB,CAA0B8F,cAAepD,EAAUC,OAAO3C,EAAO0F,WAAWlE,WAAWS,QAAQ,KAAM,IAAMjC,EAAO+F,YAAY,KAAK9D,QAAQ,IAAK,WAEzJ,CAACjC,EAAO+F,YAAa/F,EAAO0F,aAE/B1I,qBAAU,WACRiD,GAAU,SAACD,GAAD,sBAAkBA,EAAlB,CAA0BgG,yBAA0BtD,EAAUC,OAAO3C,EAAO0F,WAAWlE,WAAWS,QAAQ,KAAM,IAAMjC,EAAOiG,uBAAuB,KAAKhE,QAAQ,IAAK,WAE/K,CAACjC,EAAOiG,uBAAwBjG,EAAO0F,aAE1C1I,qBAAU,WACR0E,MAEC,IAGH,IAAMgB,EAAY,IAAIU,KAAKC,aAAa,QAAS,CAC/C/C,MAAO,WACPgD,SAAU,MACVC,sBAAuB,IAGzB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAY,kBAAC,IAAD,CAAgB/E,UAAU,gBACtCgF,gBAAc,kBACdC,GAAG,iBACHjF,UAAU,qBAEV,kBAACkF,EAAA,EAAD,sBACA,kBAACA,EAAA,EAAD,CAAYlF,UAAU,0BAA0BqB,EAAO0B,eAAvD,QAEF,kBAACoC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACtB,kBAACpF,EAAA,EAAD,CACIqF,MAAM,gBACNxD,QAAQ,SACRuC,KAAK,aACL5D,MAAOY,EAAO0F,WACdpG,WAAY,CACR4E,eACE,kBAAC1E,EAAA,EAAD,CAAgBC,SAAS,SACvB,kCAIRR,SAAU,SAACC,GAAD,OAAU4D,EAAa5D,MAEnC,yBAAKP,UAAU,cACb,kBAACC,EAAA,EAAD,CACIqF,MAAM,UACNtF,UAAU,gBACV8B,QAAQ,SACRd,UAAU,EACVqD,KAAK,gBACL5D,MAAOY,EAAO4F,cACd5B,WAAW,EACX1E,WAAY,CACR4E,eACE,kBAAC1E,EAAA,EAAD,CAAgBC,SAAS,SACvB,kCAIRR,SAAU,SAACC,GAAD,OAAU4D,EAAa5D,MAErC,kBAACN,EAAA,EAAD,CACIqF,MAAM,IACNxD,QAAQ,SACRuC,KAAK,cACL5D,MAAOY,EAAO6F,YACd7B,WAAW,EACX1E,WAAY,CACRC,aACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACvB,kCAIRR,SAAU,SAACC,GAAD,OAAU4D,EAAa5D,OAGvC,yBAAKP,UAAU,cACb,kBAACC,EAAA,EAAD,CACIqF,MAAM,UACNtF,UAAU,gBACV8B,QAAQ,SACRd,UAAU,EACVqD,KAAK,gBACL5D,MAAOY,EAAO8F,cACd9B,WAAW,EACX1E,WAAY,CACR4E,eACE,kBAAC1E,EAAA,EAAD,CAAgBC,SAAS,SACvB,kCAIRR,SAAU,SAACC,GAAD,OAAU4D,EAAa5D,MAEnC,kBAACN,EAAA,EAAD,CACIqF,MAAM,IACNxD,QAAQ,SACRuC,KAAK,cACL5D,MAAOY,EAAO+F,YACd/B,WAAW,EACX1E,WAAY,CACRC,aACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACvB,kCAIRR,SAAU,SAACC,GAAD,OAAU4D,EAAa5D,OAGzC,yBAAKP,UAAU,cACb,kBAACC,EAAA,EAAD,CACIqF,MAAM,sBACNtF,UAAU,gBACV8B,QAAQ,SACRd,UAAU,EACVqD,KAAK,2BACL5D,MAAOY,EAAOgG,yBACdhC,WAAW,EACX1E,WAAY,CACR4E,eACE,kBAAC1E,EAAA,EAAD,CAAgBC,SAAS,SACvB,kCAIRR,SAAU,SAACC,GAAD,OAAU4D,EAAa5D,MAEnC,kBAACN,EAAA,EAAD,CACIqF,MAAM,IACNxD,QAAQ,SACRuC,KAAK,yBACL5D,MAAOY,EAAOiG,uBACdjC,WAAW,EACX1E,WAAY,CACRC,aACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACvB,kCAIRR,SAAU,SAACC,GAAD,OAAU4D,EAAa5D,WCjLpCmH,EAnBC,SAAChK,GACf,OACE,yBAAKsC,UAAU,WACb,yBAAKA,UAAY,cACf,uBAAGA,UAAU,gBAAb,cACA,uBAAGA,UAAU,iBAAuD,IAAvC4D,KAAK+D,KAAKjK,EAAM2D,OAAOuG,WAAvB,YAAgDhE,KAAKiE,IAAInK,EAAM2D,OAAOuG,YAAtE,WAAyFlK,EAAM2D,OAAOuG,aAErI,yBAAK5H,UAAY,cACf,uBAAGA,UAAU,gBAAb,cACA,uBAAGA,UAAU,gBAAgB8H,SAASpK,EAAM2D,OAAO0G,kBAAoBrK,EAAM2D,OAAO0G,iBAAmB,EAAvG,MAEF,yBAAK/H,UAAY,cACf,uBAAGA,UAAU,gBAAb,YACA,uBAAGA,UAAU,gBAAgB8H,SAASpK,EAAM2D,OAAO2G,SAAWtK,EAAM2D,OAAO2G,QAAU,EAArF,QCqDOC,EAhEI,SAACvK,GAAW,IAAD,EACAE,mBAAS,CACjCsK,WAAY,EACZnF,eAAgB,IAHQ,mBACrB1B,EADqB,KACbC,EADa,KAc1BjD,qBAAU,WACRiD,GAAU,SAACD,GAAD,sBAAkBA,EAAlB,CAA0B0B,eAAgBgB,EAAUC,OAAO3C,EAAO6G,WAAWrF,WAAWS,QAAQ,KAAM,YAE/G,CAACjC,EAAO6G,aAEX7J,qBAAU,WACRX,EAAM6G,YAAYf,SAASnC,EAAO0B,eAAeF,WAAWS,QAAQ,QAAS,KAAM,gBAElF,CAACjC,EAAO0B,iBAEb,IAAMgB,EAAY,IAAIU,KAAKC,aAAa,QAAS,CAC/C/C,MAAO,WACPgD,SAAU,MACVC,sBAAuB,IAGzB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACAC,WAAY,kBAAC,IAAD,CAAgB/E,UAAU,gBACtCgF,gBAAc,kBACdC,GAAG,iBACHjF,UAAU,qBAER,kBAACkF,EAAA,EAAD,8BACA,kBAACA,EAAA,EAAD,CAAYlF,UAAU,4BAA4BqB,EAAO0B,iBAE3D,kBAACoC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACpB,kBAACpF,EAAA,EAAD,CACIqF,MAAM,wBACNxD,QAAQ,SACRuC,KAAK,aACL5D,MAAOY,EAAO6G,WACd7C,WAAW,EACX1E,WAAY,CACR4E,eACE,kBAAC1E,EAAA,EAAD,CAAgBC,SAAS,SACvB,kCAIRR,SAAU,SAACC,GAAD,OAlDC,SAACA,IAGO,KAAvBA,EAAMC,OAAOC,OAFN,eAEyB2D,KAAK7D,EAAMC,OAAOC,SACpDa,EAAU,eAAKD,EAAN,eAAed,EAAMC,OAAO6D,KAAON,EAAUC,OAAOzD,EAAMC,OAAOC,MAAMoC,WAAWS,QAAQ,KAAM,KAAKA,QAAQ,IAAK,OA8CjGa,CAAa5D,UC4ChC4H,EApGG,SAACzK,GAAW,IAAD,EACCE,mBAAS,CACjCwK,UAAW,EACXC,WAAY,EACZC,QAAS,EACTvF,eAAgB,IALO,mBACpB1B,EADoB,KACZC,EADY,KAQnB6C,EAAe,SAAC5D,IAGO,KAAvBA,EAAMC,OAAOC,OAFN,eAEyB2D,KAAK7D,EAAMC,OAAOC,SACpDa,EAAU,eAAKD,EAAN,eAAed,EAAMC,OAAO6D,KAAON,EAAUC,OAAOzD,EAAMC,OAAOC,MAAMoC,WAAWS,QAAQ,KAAM,KAAKA,QAAQ,IAAK,QAI/HjF,qBAAU,WACR,IAAIkK,EAAe/E,SAASnC,EAAO+G,UAAUvF,WAAWS,QAAQ,IAAK,KACjEkF,EAAgBhF,SAASnC,EAAOgH,WAAWxF,WAAWS,QAAQ,IAAK,KACnEmF,EAAajF,SAASnC,EAAOiH,QAAQzF,WAAWS,QAAQ,IAAK,KAEjEhC,GAAU,SAACD,GAAD,sBAAiBA,EAAjB,CAAyB0B,eAAgBgB,EAAUC,OAAOuE,EAAeC,EAAgBC,UAElG,CAACpH,EAAO+G,UAAW/G,EAAOgH,WAAYhH,EAAOiH,UAEhDjK,qBAAU,WACRX,EAAM6G,YAAYf,SAASnC,EAAO0B,eAAeF,WAAWS,QAAQ,QAAS,KAAM,eAElF,CAACjC,EAAO0B,iBAEb,IAAMgB,EAAY,IAAIU,KAAKC,aAAa,QAAS,CAC/C/C,MAAO,WACPgD,SAAU,MACVC,sBAAuB,IAGzB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACAC,WAAY,kBAAC,IAAD,CAAgB/E,UAAU,gBACtCgF,gBAAc,kBACdC,GAAG,iBACHjF,UAAU,qBAER,kBAACkF,EAAA,EAAD,kBACA,kBAACA,EAAA,EAAD,CAAYlF,UAAU,4BAA4BqB,EAAO0B,eAAzD,QAEF,kBAACoC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACpB,kBAACpF,EAAA,EAAD,CACIqF,MAAM,eACNxD,QAAQ,SACRuC,KAAK,YACL5D,MAAOY,EAAO+G,UACd/C,WAAW,EACX1E,WAAY,CACR4E,eACE,kBAAC1E,EAAA,EAAD,CAAgBC,SAAS,SACvB,kCAIRR,SAAU,SAACC,GAAD,OAAU4D,EAAa5D,MAErC,kBAACN,EAAA,EAAD,CACIqF,MAAM,gBACNxD,QAAQ,SACRuC,KAAK,aACL5D,MAAOY,EAAOgH,WACdhD,WAAW,EACX1E,WAAY,CACR4E,eACE,kBAAC1E,EAAA,EAAD,CAAgBC,SAAS,SACvB,kCAIRR,SAAU,SAACC,GAAD,OAAU4D,EAAa5D,MAErC,kBAACN,EAAA,EAAD,CACIqF,MAAM,yBACNxD,QAAQ,SACRuC,KAAK,UACL5D,MAAOY,EAAOiH,QACdjD,WAAW,EACX1E,WAAY,CACR4E,eACE,kBAAC1E,EAAA,EAAD,CAAgBC,SAAS,SACvB,kCAIRR,SAAU,SAACC,GAAD,OAAU4D,EAAa5D,UCQhCmI,EA5FC,SAAChL,GAAW,IAAD,EACGE,mBAAS,CACjC4E,gBAAiB,EACjBH,YAAa,EACbe,WAAY,EACZuF,gBAAiB,EACjBC,kBAAmB,EACnBC,qBAAsB,EACtBC,UAAW,EACXC,eAAgB,EAChBC,cAAe,EACfhB,QAAS,EACTiB,UAAW,EACXf,WAAY,EACZH,iBAAkB,EAClBH,UAAW,EACXsB,UAAW,IAhBU,mBAClB7H,EADkB,KACVC,EADU,KAuBnBiD,EAAc,SAAC9D,EAAO4D,GAC1B/C,GAAU,SAACD,GAAD,sBAAiBA,EAAjB,eAA0BgD,EAAO5D,QAmB7C,OAhBApC,qBAAU,WACRiD,GAAU,SAACD,GAAD,sBAAiBA,EAAjB,CAAyB0G,kBAC+G,IAA7I1G,EAAOsH,gBAAkBtH,EAAOwH,qBAAuBxH,EAAO6H,UAAY7H,EAAOyH,UAAYzH,EAAO0H,eAAiB1H,EAAO2H,gBAC9H3H,EAAOgB,YAAchB,EAAO4H,UAAY5H,EAAO6G,YAAc,KAAKhE,QAAQ,UAG5E,CAAC7C,EAAOsH,gBAAiBtH,EAAOwH,qBAAsBxH,EAAOgB,YAAahB,EAAO4H,UAAW5H,EAAO6G,WAAY7G,EAAO6H,UAAW7H,EAAO0H,eAAgB1H,EAAOyH,UAAWzH,EAAO2H,gBAEpL3K,qBAAU,WACRiD,GAAU,SAACD,GAAD,sBAAiBA,EAAjB,CAAyB2G,SAAU,KAAiC,GAAzB3G,EAAOsH,gBAAwBtH,EAAOyH,UAAYzH,EAAO0H,eAAiB1H,EAAO2H,cAAgB3H,EAAO6H,WAAW7H,EAAO+B,YAAYc,QAAQ,UAClM,CAAC7C,EAAOsH,gBAAiBtH,EAAO+B,WAAY/B,EAAOyH,UAAWzH,EAAO0H,eAAgB1H,EAAO2H,cAAe3H,EAAO6H,YAErH7K,qBAAU,WACRiD,GAAU,SAACD,GAAD,sBAAiBA,EAAjB,CAAyBuG,UAAWvG,EAAOsH,gBAAkBtH,EAAOwH,qBAAuBxH,EAAOyH,UAAYzH,EAAO0H,eAAiB1H,EAAO2H,cAAgB3H,EAAO6H,iBAC7K,CAAC7H,EAAOsH,gBAAiBtH,EAAOwH,qBAAsBxH,EAAOyH,UAAWzH,EAAO0H,eAAgB1H,EAAO2H,cAAe3H,EAAO6H,YAG7H,yBAAKlJ,UAAU,WACb,yBAAKhB,IAAKwC,IAAMC,IAAI,OAAOzB,UAAU,SACrC,kBAAC,EAAD,CACIqB,OAAUA,IAEd,yBAAKrB,UAAU,kBACb,kBAAC,EAAD,CACEqB,OAAU3D,EAAMyL,QAChB5E,YAAeA,IAEjB,kBAAC,EAAD,CACElD,OAAU3D,EAAMyL,QAChB3G,gBAAmBnB,EAAOmB,gBAC1BgC,sBAtCsB,SAAC/D,GAC7Ba,GAAU,SAACD,GAAD,sBAAiBA,EAAjB,CAAyBmB,gBAAiB/B,QAsC9C2C,WAAc/B,EAAO+B,WACrBmB,YAAeA,IAEjB,kBAAC,EAAD,CACElD,OAAU3D,EAAMyL,QAChB3G,gBAAmBnB,EAAOmB,gBAC1B+B,YAAeA,IAEjB,kBAAC,EAAD,CACElD,OAAU3D,EAAMyL,QAChB3G,gBAAmBnB,EAAOmB,gBAC1B+B,YAAeA,IAEjB,kBAAC,EAAD,CACElD,OAAU3D,EAAMyL,QAChB/F,WAAc/B,EAAO+B,WACrBmB,YAAeA,IAEjB,kBAAC,EAAD,CACEA,YAAaA,IAEf,kBAAC,EAAD,CACEA,YAAaA,KAGjB,yBAAKvE,UAAU,cACb,kBAAC6B,EAAA,EAAD,CAAQC,QAAQ,WAAWX,MAAM,UAAUJ,QAAS,kBAAMrD,EAAM0L,WAAhE,W,kCCvFFC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAASC,KAEXC,UAAW,CACTC,cAAe,CACbC,KAAM,CACJ,cAAe,YA6ERC,E,4MAtEbC,MAAQ,CACN9H,aAAc,GACdmH,QAAS,GACTY,aAAa,EACb3J,YAAY,G,EAGd4J,cAAgB,WACd,EAAKC,SAAS,CAACF,aAAa,EAAKD,MAAMC,e,EAGzCzL,cAAgB,SAAC4L,GACf,EAAKD,SAAS,CAACjI,aAAckI,K,EAG/BjJ,YAAc,WACZ,EAAKgJ,SAAS,CAAC7J,YAAY,K,EAG7B2B,OAAS,WACwB,KAA5B,EAAK+H,MAAM9H,cACZmI,EAAqB,EAAKL,MAAM9H,cAAc9E,MAAK,SAAAM,GACrC,MAATA,GAIH,EAAKyM,SAAS,CAACd,QAAS3L,IACxB,EAAKwM,iBAJH,EAAKC,SAAS,CAAC7J,YAAa,EAAK0J,MAAM1J,iB,uDASrC,IAAD,OACHgK,EAAmBC,KAAKP,MAAMC,YAAc,yBAA2B,wBACvEO,EAAoBD,KAAKP,MAAMC,YAAc,wBAA0B,yBAE3E,OACE,yBAAK/J,UAAU,YACb,kBAAC,IAAD,CAAkBqJ,MAAOA,GACvB,kBAAC,aAAD,CACEkB,MAAOF,KAAKP,MAAMC,YAClBS,SAAS,EACTC,KAAM,CAAE3J,SAAU,WAAY4J,QAAS,EAAGC,UAAWP,EAAkBxI,MAAO,OAC9EgJ,MAAO,CAAEF,QAAS,EAAGC,UAAW,sBAAuB/I,MAAO,OAC9DiJ,MAAO,CAAEH,QAAS,EAAGC,UAAWL,EAAmB1I,MAAO,SAEzD,SAAA2I,GAAK,OACJA,EACI,SAAA7M,GAAK,OAAI,yBAAKiE,MAAOjE,EAAOsC,UAAU,eACtC,kBAAC,EAAD,CACE1B,cAAe,EAAKA,cACpByD,OAAQ,EAAKA,OACb3B,WAAY,EAAK0J,MAAM1J,WACvBa,YAAa,EAAKA,gBAGpB,SAAAvD,GAAK,OAAI,yBAAKiE,MAAOjE,EAAOsC,UAAU,gBACtC,kBAAC,EAAD,CACEmJ,QAAS,EAAKW,MAAMX,QACpBC,OAAQ,EAAKY,2B,GA5Dfc,aCVEC,QACW,cAA7B3L,OAAO4L,SAASC,UAEe,UAA7B7L,OAAO4L,SAASC,UAEhB7L,OAAO4L,SAASC,SAAS3G,MACvB,2DCTN4G,IAASC,OACL,kBAAC,EAAD,MACEzM,SAAS0M,eAAe,SDwHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrO,MAAK,SAAAsO,GACJA,EAAaC,gBAEdC,OAAM,SAAAvL,GACLwL,QAAQxL,MAAMA,EAAMyL,a,mBEzI5BC,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.f4781a5f.chunk.js","sourcesContent":["// const api = 'http://127.0.0.1:5000'\r\nconst api = 'http://ec2-34-208-252-225.us-west-2.compute.amazonaws.com'\r\n\r\nexport const getAll = (address) =>\r\n  fetch(`${api}/analysis?address=${address}`)\r\n   .then(response => {\r\n     if(!response.ok) {\r\n       throw Error(response.statusText)\r\n     }\r\n     return response.json()\r\n   })\r\n   .then(data => {\r\n     return data\r\n   })\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport {InputAdornment, TextField} from '@material-ui/core'\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff'\r\n\r\nconst GoogleAutocomplete = (props) => {\r\n  const [query, setQuery] = useState('')\r\n  const autoCompleteRef = useRef(null)\r\n\r\n  let autoComplete\r\n\r\n  const loadScript = (url, callback) => {\r\n    let script = document.createElement('script')\r\n    script.type = 'text/javascript'\r\n\r\n    if (script.readyState) {\r\n      script.onreadystatechange = function() {\r\n        if (script.readyState === 'loaded' || script.readyState === 'complete') {\r\n          script.onreadystatechange = null\r\n          callback()\r\n        }\r\n      }\r\n    } else {\r\n      script.onload = () => callback()\r\n    }\r\n\r\n    script.src = url\r\n    document.getElementsByTagName('head')[0].appendChild(script)\r\n  }\r\n\r\n  const handleScriptLoad = (updateQuery, autoCompleteRef) => {\r\n    autoComplete = new window.google.maps.places.Autocomplete(\r\n      autoCompleteRef.current,\r\n      { types: ['address'], componentRestrictions: { country: 'us' } }\r\n    )\r\n    autoComplete.setFields(['address_components', 'formatted_address'])\r\n    autoComplete.addListener('place_changed', () =>\r\n      handlePlaceSelect(updateQuery)\r\n    )\r\n  }\r\n\r\n  const handlePlaceSelect = (updateQuery) => {\r\n    const addressObject = autoComplete.getPlace()\r\n    const query = addressObject.formatted_address\r\n    updateQuery(query)\r\n  }\r\n\r\n  const clearAddress = () => {\r\n    if(!props.disabled) {\r\n      setQuery('')\r\n      props.updateError()\r\n      props.disableButton()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.updateAddress(query)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [query])\r\n\r\n  useEffect(() => {\r\n    loadScript(\r\n      `https://maps.googleapis.com/maps/api/js?key=AIzaSyCuKTXrmZFwNhgQtln2xZdtmRfR_c218Bk&libraries=places`,\r\n      () => handleScriptLoad(setQuery, autoCompleteRef)\r\n    )\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <div className='search-div'>\r\n        <TextField\r\n          className='search-location-input'\r\n          inputRef={autoCompleteRef}\r\n          error={props.badAddress}\r\n          helperText={props.badAddress ? 'Incorrect Address' : ''}\r\n          onChange={event => setQuery(event.target.value)}\r\n          placeholder='Address...'\r\n          value={query}\r\n          InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position='start'>\r\n                  <p className='clear-icon' onClick={ () => clearAddress()}>{query && <HighlightOffIcon className='delete-icon' color='primary'/>}</p>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GoogleAutocomplete\r\n","import React, {useState} from 'react'\r\nimport { Button } from '@material-ui/core'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport GoogleAutocomplete from './GoogleAutocomplete'\r\nimport logo from '../RoofCalc.png'\r\n\r\nconst SearchPage = (props) => {\r\n    const [values, setValues] = useState({\r\n        disabled: false\r\n    })\r\n\r\n    const disableButton = (action = 'nothing') => {\r\n      if (action === 'search'){\r\n        setValues((values) => ({...values, disabled: true}))\r\n      }\r\n      else {\r\n        setValues((values) => ({...values, disabled: false}))\r\n      }\r\n    }\r\n\r\n    const handleClick = () => {\r\n      disableButton('search')\r\n      props.search(props.inputAddress)\r\n    }\r\n\r\n    return (\r\n      <div className='search'>\r\n        <div className='search-section'>\r\n          <img src={logo} alt='logo' className='logo'/>\r\n          <p className='app-description'>Analyze investment properties</p>\r\n          <GoogleAutocomplete\r\n            updateAddress={props.updateAddress}\r\n            badAddress={props.badAddress}\r\n            updateError={props.updateError}\r\n            disableButton={disableButton}\r\n            disabled={values.disabled}\r\n          />\r\n        {values.disabled && !props.badAddress && <LinearProgress style={{ width: '80%' }} />}\r\n        </div>\r\n        <div className='search-button'>\r\n          <Button variant='outlined' color='primary' onClick={handleClick}\r\n            disabled={values.disabled && !props.badAddress}>\r\n            Search\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default SearchPage;\r\n","import React, {useState, useEffect} from 'react'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {InputAdornment, TextField, ExpansionPanel, Typography, ExpansionPanelDetails, ExpansionPanelSummary, FormControl} from '@material-ui/core'\r\n\r\nconst PrincipalAndInterest = (props) => {\r\n  const [values, setValues] = useState({\r\n      zestimate: props.values.zestimates.zestimate.toLocaleString('en-US'),\r\n      downPayment: props.values.monthly_mortgage.down_payment.toLocaleString('en-US'),\r\n      downPaymentPerc: props.values.monthly_mortgage.down_payment_perc * 100,\r\n      loanType: '30-year',//props.values.mortgage_rate.loan_type,\r\n      rate: (props.values.mortgage_rate.rate * 100).toString().slice(0,5),\r\n      monthlyPayment: '',\r\n      percActive: false,\r\n      closingCosts: props.values.closing_costs.closing_costs.toLocaleString('en-US'),\r\n    })\r\n\r\n    const monthlyPaymentCalc = (housePrice, downPayment, loanType, rate) => {\r\n      let loan = housePrice.toString().replace(/,/g, '') - downPayment.toString().replace(/,/g, '')\r\n      let numPayments = parseInt(loanType.substring(0, 2)) * 12 // 12 Months in year\r\n      let monthlyRate = parseFloat((rate/100)/12) // 12 Months in year\r\n      let monthlyPayment = Math.round(loan*(monthlyRate*Math.pow((1 + monthlyRate), numPayments))/(Math.pow((1 + monthlyRate), numPayments) - 1)) || 0\r\n\r\n      setValues({...values, monthlyPayment: formatter.format(monthlyPayment)})\r\n    }\r\n\r\n    const downPaymentCalc = (type, value, housePrice) => {\r\n      if (type === 'percent') {\r\n        setValues({...values, downPayment: formatter.format(Math.round((value/100) * housePrice.replace(/,/g, ''))).replace('$', '')}) //divide by 100 to get it as a percent again\r\n      }\r\n      else {\r\n        setValues({...values, downPaymentPerc: (value.replace(/,/g, '')/housePrice.replace(/,/g, '') * 100).toFixed(1)})\r\n      }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n      const re = /^[.,0-9\\b]+$/;\r\n      // if value is not blank, then test the regex and only accept numbers\r\n      if (event.target.value === '' || re.test(event.target.value)) {\r\n        if (event.target.name === 'zestimate' || event.target.name === 'downPayment' || event.target.name === 'closingCosts') {\r\n          setValues({ ...values, [event.target.name]: formatter.format(event.target.value.toString().replace(/,/g, '')).replace('$', '')})\r\n        }\r\n        else if (event.target.value.match(/^\\d*(\\.\\d*)?$/g)) {\r\n          setValues({ ...values, [event.target.name]: event.target.value === '' ? 0 : event.target.value.replace(/(^0)(\\d)/g, '$2')})\r\n        }\r\n      }\r\n    }\r\n\r\n  useEffect(() => {\r\n    props.changeValue(parseInt(values.zestimate.replace(',', '')), 'housePrice')\r\n    monthlyPaymentCalc(values.zestimate, values.downPayment, values.loanType, values.rate)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.zestimate, values.downPayment, values.downPaymentPerc, values.loanType, values.rate])\r\n\r\n  useEffect(() => {\r\n    if (values.percActive) return //Don't want current textfield changing while the user is changing it\r\n    downPaymentCalc('amount', values.downPayment, values.zestimate)\r\n    props.changeValue(parseInt(values.downPayment.toString().replace(/[$,]/g, '')), 'downPayment')\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.downPayment])\r\n\r\n  useEffect(() => {\r\n    props.changeValue(parseInt(values.monthlyPayment.replace(/[$,]/g, '')), 'principalAndInterest')\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.monthlyPayment])\r\n\r\n  useEffect(() => {\r\n    props.downPaymentPercChange(values.downPaymentPerc)\r\n    if (!values.percActive) return //Don't want current textfield changing while the user is changing it\r\n    downPaymentCalc('percent', values.downPaymentPerc, values.zestimate)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.downPaymentPerc])\r\n\r\n  useEffect(() => {\r\n    props.changeValue(parseInt(values.closingCosts.toString().replace(/[$,]/g, '')), 'loanCosts')\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.closingCosts])\r\n\r\n  useEffect(() => {\r\n   monthlyPaymentCalc(values.zestimate, values.downPayment, values.loanType, values.rate)\r\n   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0\r\n  })\r\n\r\n  return (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary\r\n      expandIcon={<ExpandMoreIcon className='expand-icon'/>}\r\n      aria-controls='panel1a-content'\r\n      id='panel1a-header'\r\n      className='accordion-summary'\r\n      >\r\n        <Typography>Principal & Interest</Typography>\r\n        <Typography className='accordion-total expenses'>{values.monthlyPayment}/Mo</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <FormControl fullWidth>\r\n        <TextField\r\n            label='Home Price'\r\n            variant='filled'\r\n            name='zestimate'\r\n            value={values.zestimate}\r\n            InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <p>$</p>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            onChange={(event)=> handleChange(event)}\r\n          />\r\n          <div className='two-column'>\r\n            <TextField\r\n                label='Down Payment'\r\n                variant='filled'\r\n                name='downPayment'\r\n                value={values.downPayment}\r\n                fullWidth={true}\r\n                onFocus={() => setValues({...values, percActive: false})}\r\n                InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <p>$</p>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                onChange={(event)=> handleChange(event)}\r\n            />\r\n            <TextField\r\n                label=' '\r\n                variant='filled'\r\n                name='downPaymentPerc'\r\n                value={values.downPaymentPerc}\r\n                fullWidth={true}\r\n                onFocus={() => setValues({...values, percActive: true})}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <p>%</p>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                onChange={(event)=> handleChange(event)}\r\n            />\r\n          </div>\r\n          <div className='two-column'>\r\n            <TextField\r\n                label='Loan Program'\r\n                variant='filled'\r\n                name='loanType'\r\n                value={values.loanType}\r\n                fullWidth={true}\r\n                onChange={(event)=> handleChange(event)}\r\n            />\r\n            <TextField\r\n                label='Interest Rate'\r\n                variant='filled'\r\n                name='rate'\r\n                value={values.rate}\r\n                fullWidth={true}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <p>%</p>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                onChange={(event)=> handleChange(event)}\r\n            />\r\n          </div>\r\n          <TextField\r\n              label='Est. Loan Costs'\r\n              variant='filled'\r\n              name='closingCosts'\r\n              fullWidth={true}\r\n              value={values.closingCosts}\r\n              InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <p>$</p>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              onChange={(event)=> handleChange(event)}\r\n            />\r\n        </FormControl>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  )\r\n}\r\n\r\nexport default PrincipalAndInterest\r\n","import React, {useState, useEffect} from 'react'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport {Tooltip, InputAdornment, TextField, ExpansionPanel, Typography, ExpansionPanelDetails, ExpansionPanelSummary, FormControl } from '@material-ui/core'\r\n\r\nconst Insurance = (props) => {\r\n  const [values, setValues] = useState({\r\n      pmiChecked: false,\r\n      pmi: props.values.pmi.yearly.toLocaleString('en-US'),\r\n      fiChecked: false,\r\n      fi: props.values.fi.yearly.toLocaleString('en-US'),\r\n      pi: props.values.pi.yearly.toLocaleString('en-US'),\r\n      monthlyPayment: 0,\r\n    })\r\n\r\n  useEffect(() => {\r\n    setValues({ ...values, pmiChecked: (parseInt(props.downPaymentPerc) < 20 ? true : false)});\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props])\r\n\r\n  useEffect(() => {\r\n    props.changeValue(parseInt(values.monthlyPayment.toString().replace('$', '')), 'insurance')\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.monthlyPayment])\r\n\r\n  useEffect(() => {\r\n    let pmi = values.pmiChecked ? parseInt(values.pmi.replace(/,/g, '')) : 0\r\n    let pi = parseInt(values.pi.replace(/,/g, ''))\r\n\r\n    setValues({ ...values, monthlyPayment: formatter.format(((pmi + pi)/12).toFixed(0))});\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.pmi, values.pmiChecked, values.pi])\r\n\r\n  const handleChange = (event, value) => {\r\n    const re = /^[.,0-9\\b]+$/\r\n    // if value is not blank, then test the regex and only accept numbers\r\n    if (event.target.value === '' || re.test(event.target.value)) {\r\n      setValues({ ...values, [event.target.name]: formatter.format(event.target.value.toString().replace(/,/g, '')).replace('$', '')})\r\n    }\r\n  }\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0\r\n  })\r\n\r\n  return (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary\r\n      expandIcon={<ExpandMoreIcon className='expand-icon'/>}\r\n      aria-controls='panel1a-content'\r\n      id='panel1a-header'\r\n      className='accordion-summary'\r\n      >\r\n        <Typography>Insurance</Typography>\r\n        <Typography className='accordion-total expenses'>{values.monthlyPayment}/Mo</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <FormControl fullWidth>\r\n          <TextField\r\n              label='Property Insurance'\r\n              name='pi'\r\n              variant='filled'\r\n              value={values.pi}\r\n              InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <p>$</p>\r\n                    </InputAdornment>\r\n                  ),\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                    <p style={{marginBottom: '0px', marginRight: '15px'}}>/Year</p>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              onChange={(event, value)=> handleChange(event, value)}\r\n            />\r\n            <TextField\r\n                label='Mortgage Insurance'\r\n                name='pmi'\r\n                variant='filled'\r\n                disabled={!values.pmiChecked}\r\n                value={values.pmiChecked ? values.pmi : 0}\r\n                InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <p>$</p>\r\n                      </InputAdornment>\r\n                    ),\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                      <p style={{marginBottom: '0px', marginRight: '15px'}}>/Year</p>\r\n                      <Tooltip\r\n                        title=\"Mortgage insurance is usually required under 20% down payment\"\r\n                        enterTouchDelay={100}\r\n                        >\r\n                        <InfoIcon\r\n                          className='info-icon'\r\n                        />\r\n                      </Tooltip>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                onChange={(event, value)=> handleChange(event, value)}\r\n              />\r\n        </FormControl>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  )\r\n}\r\n\r\nexport default Insurance\r\n","import React, {useState, useEffect} from 'react'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport { Checkbox,Tooltip, InputAdornment, TextField, ExpansionPanel, Typography, ExpansionPanelDetails, ExpansionPanelSummary, FormControl } from '@material-ui/core'\r\n\r\nconst FloodInsurance = (props) => {\r\n  const [values, setValues] = useState({\r\n      fiChecked: false,\r\n      fi: props.values.fi.yearly.toLocaleString('en-US'),\r\n      monthlyPayment: 0,\r\n    })\r\n\r\n  useEffect(() => {\r\n    props.changeValue(parseInt(values.monthlyPayment.toString().replace('$', '')), 'floodInsurance')\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.monthlyPayment])\r\n\r\n  useEffect(() => {\r\n    let fi = values.fiChecked ? parseInt(values.fi.replace(/,/g, '')) : 0\r\n\r\n    setValues({ ...values, monthlyPayment: formatter.format((fi/12).toFixed(0))});\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.fi, values.fiChecked])\r\n\r\n  const handleChange = (event, value) => {\r\n    const re = /^[.,0-9\\b]+$/\r\n    // if value is not blank, then test the regex and only accept numbers\r\n    if (event.target.value === '' || re.test(event.target.value)) {\r\n      setValues({ ...values, [event.target.name]: formatter.format(event.target.value.toString().replace(/,/g, '')).replace('$', '')})\r\n    }\r\n  }\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0\r\n  })\r\n\r\n  return (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary\r\n      expandIcon={<ExpandMoreIcon className='expand-icon'/>}\r\n      aria-controls='panel1a-content'\r\n      id='panel1a-header'\r\n      className='accordion-summary'\r\n      >\r\n        <Typography>Flood Insurance</Typography>\r\n        <Typography className='accordion-total expenses'>{values.monthlyPayment}/Mo</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <FormControl fullWidth>\r\n          <div className='two-column'>\r\n            <Checkbox\r\n              color='primary'\r\n              onChange={(event) => {setValues({ ...values, fiChecked: !values.fiChecked})}}\r\n            />\r\n            <TextField\r\n                label='Flood Insurance'\r\n                name='fi'\r\n                variant='filled'\r\n                disabled={!values.fiChecked}\r\n                value={values.fiChecked ? values.fi : 0}\r\n                InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <p>$</p>\r\n                      </InputAdornment>\r\n                    ),\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                      <p style={{marginBottom: '0px', marginRight: '15px'}}>/Year</p>\r\n                      <Tooltip\r\n                        title=\"Flood insurance is required if the house is located in a frequent flood plain\"\r\n                        enterTouchDelay={0}\r\n                        >\r\n                        <InfoIcon />\r\n                      </Tooltip>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                onChange={(event, value)=> handleChange(event, value)}\r\n              />\r\n          </div>\r\n        </FormControl>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  )\r\n}\r\n\r\nexport default FloodInsurance\r\n","import React, {useState, useEffect} from 'react'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {InputAdornment, TextField, ExpansionPanel, Typography, ExpansionPanelDetails, ExpansionPanelSummary, FormControl} from '@material-ui/core'\r\n\r\nconst PropertyTaxes = (props) => {\r\n  const [values, setValues] = useState({\r\n      taxAmount: props.values.taxes.tax_amt_yr.toLocaleString('en-US'),\r\n      taxRate: (props.values.taxes.tax_rate * 100).toString().slice(0,4),\r\n      monthlyPayment: '',\r\n      percActive: false\r\n    })\r\n\r\n    const taxAmountCalc = (type, value, housePrice) => {\r\n      if (type === 'percent') {\r\n        setValues({...values, taxAmount: formatter.format(Math.round((value/100) * parseInt(housePrice.toString().replace(/,/g, '')))).replace('$', '')}) //divide by 100 to get it as a percent again\r\n      }\r\n      else {\r\n        setValues({...values, taxRate: ((parseInt(value.toString().replace(/,/g, ''))/parseInt(housePrice.toString().replace(/,/g, ''))) * 100).toFixed(2)})\r\n      }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n      const re = /^[.,0-9\\b]+$/;\r\n      // if value is not blank, then test the regex and only accept numbers\r\n      if (event.target.value === '' || re.test(event.target.value)) {\r\n        if (event.target.name === 'taxAmount') {\r\n          setValues({ ...values, [event.target.name]: formatter.format(event.target.value.toString().replace(/,/g, '')).replace('$', '')})\r\n        } else if (event.target.value.match(/^\\d*(\\.\\d*)?$/g)) {\r\n          setValues({ ...values, [event.target.name]: event.target.value === '' ? 0 : event.target.value.replace(/(^0)(\\d)/g, '$2')})\r\n        }\r\n      }\r\n    }\r\n\r\n  useEffect(() => {\r\n    props.changeValue(parseInt(values.monthlyPayment.replace('$', '')), 'propertyTaxes')\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.monthlyPayment])\r\n\r\n  useEffect(() => {\r\n    setValues({ ...values, monthlyPayment: formatter.format(Math.round(values.taxAmount.replace(/,/g, '')/12))})\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.taxAmount, values.taxRate])\r\n\r\n  useEffect(() => {\r\n    if (values.percActive) return //Don't want current textfield changing while the user is changing it\r\n    taxAmountCalc('amount', values.taxAmount, props.housePrice)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.taxAmount]);\r\n\r\n  useEffect(() => {\r\n    if (!values.percActive) return //Don't want current textfield changing while the user is changing it\r\n    taxAmountCalc('percent', values.taxRate, props.housePrice)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.taxRate]);\r\n\r\n  useEffect(() => {\r\n    setValues({ ...values, monthlyPayment: formatter.format(Math.round(values.taxAmount.replace(/,/g, '')/12))})\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0\r\n  })\r\n\r\n  return (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary\r\n      expandIcon={<ExpandMoreIcon className='expand-icon'/>}\r\n      aria-controls='panel1a-content'\r\n      id='panel1a-header'\r\n      className='accordion-summary'\r\n      >\r\n        <Typography>Property Taxes</Typography>\r\n        <Typography className='accordion-total expenses'>{values.monthlyPayment}/Mo</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <FormControl fullWidth>\r\n          <div className='two-column'>\r\n            <TextField\r\n                label='Tax Amount'\r\n                variant='filled'\r\n                name='taxAmount'\r\n                value={values.taxAmount}\r\n                fullWidth={true}\r\n                onFocus={() => setValues({...values, percActive: false})}\r\n                InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <p>$</p>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                onChange={(event, value)=> handleChange(event, value)}\r\n            />\r\n            <TextField\r\n                label='Tax Rate'\r\n                variant='filled'\r\n                name='taxRate'\r\n                value={values.taxRate}\r\n                fullWidth={true}\r\n                onFocus={() => setValues({...values, percActive: true})}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <p>%</p>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                onChange={(event, value)=> handleChange(event, value)}\r\n            />\r\n          </div>\r\n        </FormControl>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  )\r\n}\r\n\r\nexport default PropertyTaxes\r\n","import React, {useState, useEffect} from 'react'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {InputAdornment, TextField, ExpansionPanel, Typography, ExpansionPanelDetails, ExpansionPanelSummary, FormControl} from '@material-ui/core'\r\n\r\nconst RentalIncome = (props) => {\r\n  const [values, setValues] = useState({\r\n      rentAmount: props.values.zestimates.rent_zestimate.toLocaleString('en-US'),\r\n      monthlyPayment: props.values.zestimates.rent_zestimate.toLocaleString('en-US'),\r\n      vacancyAmount: (props.values.zestimates.rent_zestimate * 0.1).toLocaleString('en-US'),\r\n      vacancyRate: 10,\r\n      repairsAmount: (props.values.zestimates.rent_zestimate * 0.1).toLocaleString('en-US'),\r\n      repairsRate: 10,\r\n      propertyManagementAmount: (props.values.zestimates.rent_zestimate * 0.1).toLocaleString('en-US'),\r\n      propertyManagementRate: 10,\r\n    })\r\n\r\n    const handleChange = (event) => {\r\n      const re = /^[.,0-9\\b]+$/\r\n      // // if value is not blank, then test the regex and only accept numbers\r\n      if (event.target.value === '' || re.test(event.target.value)) {\r\n        if (event.target.name.includes('Amount')) {\r\n          setValues({ ...values, [event.target.name]: formatter.format(event.target.value.toString().replace(/,/g, '')).replace('$', '')})\r\n        } else if (event.target.value.match(/^\\d*(\\.\\d*)?$/g)) {\r\n            setValues({ ...values, [event.target.name]: event.target.value === '' ? 0 : event.target.value.replace(/(^0)(\\d)/g, '$2')})\r\n        }\r\n      }\r\n    }\r\n\r\n  const monthlyPayment = () => {\r\n    let rentAmountInt = parseInt(values.rentAmount.toString().replace(/,/g, ''))\r\n    let vacancyAmountInt = parseInt(values.vacancyAmount.toString().replace(/,/g, ''))\r\n    let repairAmountInt = parseInt(values.repairsAmount.toString().replace(/,/g, ''))\r\n    let propertyManagementAmountInt = parseInt(values.propertyManagementAmount.toString().replace(/,/g, ''))\r\n    let monthlyPaymentAmount = rentAmountInt - (vacancyAmountInt + repairAmountInt + propertyManagementAmountInt)\r\n\r\n    setValues({...values, monthlyPayment: formatter.format(monthlyPaymentAmount)})\r\n    props.changeValue(monthlyPaymentAmount, 'netRentalIncome')\r\n    props.changeValue(rentAmountInt, 'grossRentalIncome')\r\n  }\r\n\r\n  useEffect(() => {\r\n    monthlyPayment()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.vacancyAmount, values.rentAmount, values.repairsAmount, values.propertyManagementAmount])\r\n\r\n  useEffect(() => {\r\n    setValues((values) => ({ ...values, vacancyAmount: formatter.format(values.rentAmount.toString().replace(/,/g, '') * values.vacancyRate/100).replace('$', '')}))\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.vacancyRate, values.rentAmount])\r\n\r\n  useEffect(() => {\r\n    setValues((values) => ({ ...values, repairsAmount: formatter.format(values.rentAmount.toString().replace(/,/g, '') * values.repairsRate/100).replace('$', '')}))\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.repairsRate, values.rentAmount])\r\n\r\n  useEffect(() => {\r\n    setValues((values) => ({ ...values, propertyManagementAmount: formatter.format(values.rentAmount.toString().replace(/,/g, '') * values.propertyManagementRate/100).replace('$', '')}))\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.propertyManagementRate, values.rentAmount])\r\n\r\n  useEffect(() => {\r\n    monthlyPayment()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0\r\n  })\r\n\r\n  return (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary\r\n        expandIcon={<ExpandMoreIcon className='expand-icon'/>}\r\n        aria-controls='panel1a-content'\r\n        id='panel1a-header'\r\n        className='accordion-summary'\r\n      >\r\n        <Typography>Rental Income</Typography>\r\n        <Typography className='accordion-total income'>{values.monthlyPayment}/Mo</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <FormControl fullWidth>\r\n        <TextField\r\n            label='Rental Income'\r\n            variant='filled'\r\n            name='rentAmount'\r\n            value={values.rentAmount}\r\n            InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <p>$</p>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            onChange={(event)=> handleChange(event)}\r\n          />\r\n          <div className='two-column'>\r\n            <TextField\r\n                label='Vacancy'\r\n                className='amount-column'\r\n                variant='filled'\r\n                disabled={true}\r\n                name='vacancyAmount'\r\n                value={values.vacancyAmount}\r\n                fullWidth={true}\r\n                InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <p>$</p>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                onChange={(event)=> handleChange(event)}\r\n            />\r\n            <TextField\r\n                label=' '\r\n                variant='filled'\r\n                name='vacancyRate'\r\n                value={values.vacancyRate}\r\n                fullWidth={true}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <p>%</p>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                onChange={(event)=> handleChange(event)}\r\n            />\r\n          </div>\r\n          <div className='two-column'>\r\n            <TextField\r\n                label='Repairs'\r\n                className='amount-column'\r\n                variant='filled'\r\n                disabled={true}\r\n                name='repairsAmount'\r\n                value={values.repairsAmount}\r\n                fullWidth={true}\r\n                InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <p>$</p>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                onChange={(event)=> handleChange(event)}\r\n            />\r\n              <TextField\r\n                  label=' '\r\n                  variant='filled'\r\n                  name='repairsRate'\r\n                  value={values.repairsRate}\r\n                  fullWidth={true}\r\n                  InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <p>%</p>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  onChange={(event)=> handleChange(event)}\r\n            />\r\n          </div>\r\n          <div className='two-column'>\r\n            <TextField\r\n                label='Property Management'\r\n                className='amount-column'\r\n                variant='filled'\r\n                disabled={true}\r\n                name='propertyManagementAmount'\r\n                value={values.propertyManagementAmount}\r\n                fullWidth={true}\r\n                InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <p>$</p>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                onChange={(event)=> handleChange(event)}\r\n            />\r\n              <TextField\r\n                  label=' '\r\n                  variant='filled'\r\n                  name='propertyManagementRate'\r\n                  value={values.propertyManagementRate}\r\n                  fullWidth={true}\r\n                  InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <p>%</p>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  onChange={(event)=> handleChange(event)}\r\n            />\r\n          </div>\r\n        </FormControl>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  )\r\n}\r\n\r\nexport default RentalIncome\r\n","import React from 'react'\r\n\r\nconst Metrics = (props) => {\r\n  return (\r\n    <div className='metrics'>\r\n      <div className = 'net-income'>\r\n        <p className='metric-label'>Net Income</p>\r\n        <p className='metric-value'>{Math.sign(props.values.netIncome) === -1 ? `-$${Math.abs(props.values.netIncome)}` : `$${props.values.netIncome}`}</p>\r\n      </div>\r\n      <div className = 'coc-return'>\r\n        <p className='metric-label'>CoC Return</p>\r\n        <p className='metric-value'>{isFinite(props.values.cashOnCashReturn) ? props.values.cashOnCashReturn : 0}%</p>\r\n      </div>\r\n      <div className = 'rent-ratio'>\r\n        <p className='metric-label'>Cap Rate</p>\r\n        <p className='metric-value'>{isFinite(props.values.capRate) ? props.values.capRate : 0}%</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Metrics\r\n","import React, {useState, useEffect} from 'react'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {InputAdornment, TextField, ExpansionPanel, Typography, ExpansionPanelDetails, ExpansionPanelSummary, FormControl} from '@material-ui/core'\r\n\r\nconst RehabCosts = (props) => {\r\n  const [values, setValues] = useState({\r\n      rehabCosts: 0,\r\n      monthlyPayment: 0\r\n    })\r\n\r\n    const handleChange = (event) => {\r\n      const re = /^[.,0-9\\b]+$/;\r\n      // if value is not blank, then test the regex and only accept numbers\r\n      if (event.target.value === '' || re.test(event.target.value)) {\r\n        setValues({ ...values, [event.target.name]: formatter.format(event.target.value.toString().replace(/,/g, '')).replace('$', '')})\r\n      }\r\n    }\r\n\r\n    useEffect(() => {\r\n      setValues((values) => ({ ...values, monthlyPayment: formatter.format(values.rehabCosts.toString().replace(/,/g, ''))}))\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [values.rehabCosts])\r\n\r\n    useEffect(() => {\r\n      props.changeValue(parseInt(values.monthlyPayment.toString().replace(/[$,]/g, '')), 'rehabCosts')\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [values.monthlyPayment])\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0\r\n  })\r\n\r\n  return (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary\r\n      expandIcon={<ExpandMoreIcon className='expand-icon'/>}\r\n      aria-controls='panel1a-content'\r\n      id='panel1a-header'\r\n      className='accordion-summary'\r\n      >\r\n        <Typography>Estimated Rehab Costs</Typography>\r\n        <Typography className='accordion-total expenses'>{values.monthlyPayment}</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <FormControl fullWidth>\r\n          <TextField\r\n              label='Estimated Rehab Costs'\r\n              variant='filled'\r\n              name='rehabCosts'\r\n              value={values.rehabCosts}\r\n              fullWidth={true}\r\n              InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <p>$</p>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              onChange={(event)=> handleChange(event)}\r\n          />\r\n        </FormControl>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  )\r\n}\r\n\r\nexport default RehabCosts\r\n","import React, {useState, useEffect} from 'react'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {InputAdornment, TextField, ExpansionPanel, Typography, ExpansionPanelDetails, ExpansionPanelSummary, FormControl} from '@material-ui/core'\r\n\r\nconst Utilities = (props) => {\r\n  const [values, setValues] = useState({\r\n      waterCost: 0,\r\n      energyCost: 0,\r\n      hoaCost: 0,\r\n      monthlyPayment: 0\r\n    })\r\n\r\n    const handleChange = (event) => {\r\n      const re = /^[.,0-9\\b]+$/;\r\n      // if value is not blank, then test the regex and only accept numbers\r\n      if (event.target.value === '' || re.test(event.target.value)) {\r\n        setValues({ ...values, [event.target.name]: formatter.format(event.target.value.toString().replace(/,/g, '')).replace('$', '')})\r\n      }\r\n    }\r\n\r\n    useEffect(() => {\r\n      let waterCostInt = parseInt(values.waterCost.toString().replace(',', ''))\r\n      let energyCostInt = parseInt(values.energyCost.toString().replace(',', ''))\r\n      let hoaCostInt = parseInt(values.hoaCost.toString().replace(',', ''))\r\n\r\n      setValues((values) => ({...values, monthlyPayment: formatter.format(waterCostInt + energyCostInt + hoaCostInt)}))\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [values.waterCost, values.energyCost, values.hoaCost])\r\n\r\n    useEffect(() => {\r\n      props.changeValue(parseInt(values.monthlyPayment.toString().replace(/[$,]/g, '')), 'utilities')\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [values.monthlyPayment])\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0\r\n  })\r\n\r\n  return (\r\n    <ExpansionPanel>\r\n      <ExpansionPanelSummary\r\n      expandIcon={<ExpandMoreIcon className='expand-icon'/>}\r\n      aria-controls='panel1a-content'\r\n      id='panel1a-header'\r\n      className='accordion-summary'\r\n      >\r\n        <Typography>Utilities</Typography>\r\n        <Typography className='accordion-total expenses'>{values.monthlyPayment}/Mo</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <FormControl fullWidth>\r\n          <TextField\r\n              label='Water\\Sewer'\r\n              variant='filled'\r\n              name='waterCost'\r\n              value={values.waterCost}\r\n              fullWidth={true}\r\n              InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <p>$</p>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              onChange={(event)=> handleChange(event)}\r\n          />\r\n          <TextField\r\n              label='Gas\\Electric'\r\n              variant='filled'\r\n              name='energyCost'\r\n              value={values.energyCost}\r\n              fullWidth={true}\r\n              InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <p>$</p>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              onChange={(event)=> handleChange(event)}\r\n          />\r\n          <TextField\r\n              label=\"Homeowner's Assocation\"\r\n              variant='filled'\r\n              name='hoaCost'\r\n              value={values.hoaCost}\r\n              fullWidth={true}\r\n              InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <p>$</p>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              onChange={(event)=> handleChange(event)}\r\n          />\r\n        </FormControl>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  )\r\n}\r\n\r\nexport default Utilities\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Button } from '@material-ui/core'\r\nimport PrincipalAndInterest from './PrincipalAndInterest'\r\nimport Insurance from './Insurance'\r\nimport FloodInsurance from './FloodInsurance'\r\nimport PropertyTaxes from './PropertyTaxes'\r\nimport RentalIncome from './RentalIncome'\r\nimport Metrics from './Metrics'\r\nimport RehabCosts from './RehabCosts'\r\nimport Utilities from './Utilities'\r\nimport logo from '../RoofCalc.png'\r\n\r\nconst Results = (props) => {\r\n  const [values, setValues] = useState({\r\n      downPaymentPerc: 0,\r\n      downPayment: 0,\r\n      housePrice: 0,\r\n      netRentalIncome: 0,\r\n      grossRentalIncome: 0,\r\n      principalAndInterest: 0,\r\n      insurance: 0,\r\n      floodInsurance: 0,\r\n      propertyTaxes: 0,\r\n      capRate: 0,\r\n      loanCosts: 0,\r\n      rehabCosts: 0,\r\n      cashOnCashReturn: 0,\r\n      netIncome: 0,\r\n      utilities: 0\r\n    })\r\n\r\n  const downPaymentPercChange = (value) => {\r\n    setValues((values) => ({...values, downPaymentPerc: value}))\r\n  }\r\n\r\n  const changeValue = (value, name) => {\r\n    setValues((values) => ({...values, [name]: value}))\r\n  }\r\n\r\n  useEffect(() => {\r\n    setValues((values) => ({...values, cashOnCashReturn:\r\n      (((values.netRentalIncome - values.principalAndInterest - values.utilities - values.insurance - values.floodInsurance - values.propertyTaxes) * 12)/\r\n      (values.downPayment + values.loanCosts + values.rehabCosts) * 100).toFixed(2) }))\r\n\r\n\r\n  }, [values.netRentalIncome, values.principalAndInterest, values.downPayment, values.loanCosts, values.rehabCosts, values.utilities, values.floodInsurance, values.insurance, values.propertyTaxes])\r\n\r\n  useEffect(() => {\r\n    setValues((values) => ({...values, capRate: (100 * ((values.netRentalIncome * 12) - values.insurance - values.floodInsurance - values.propertyTaxes - values.utilities)/values.housePrice).toFixed(2)}))\r\n  }, [values.netRentalIncome, values.housePrice, values.insurance, values.floodInsurance, values.propertyTaxes, values.utilities])\r\n\r\n  useEffect(() => {\r\n    setValues((values) => ({...values, netIncome: values.netRentalIncome - values.principalAndInterest - values.insurance - values.floodInsurance - values.propertyTaxes - values.utilities}))\r\n  }, [values.netRentalIncome, values.principalAndInterest, values.insurance, values.floodInsurance, values.propertyTaxes, values.utilities])\r\n\r\n  return (\r\n    <div className='results'>\r\n      <img src={logo} alt='logo' className='logo'/>\r\n      <Metrics\r\n          values = {values}\r\n      />\r\n      <div className='accordion-area'>\r\n        <RentalIncome\r\n          values = {props.results}\r\n          changeValue = {changeValue}\r\n        />\r\n        <PrincipalAndInterest\r\n          values = {props.results}\r\n          downPaymentPerc = {values.downPaymentPerc}\r\n          downPaymentPercChange = {downPaymentPercChange}\r\n          housePrice = {values.housePrice}\r\n          changeValue = {changeValue}\r\n        />\r\n        <Insurance\r\n          values = {props.results}\r\n          downPaymentPerc = {values.downPaymentPerc}\r\n          changeValue = {changeValue}\r\n        />\r\n        <FloodInsurance\r\n          values = {props.results}\r\n          downPaymentPerc = {values.downPaymentPerc}\r\n          changeValue = {changeValue}\r\n        />\r\n        <PropertyTaxes\r\n          values = {props.results}\r\n          housePrice = {values.housePrice}\r\n          changeValue = {changeValue}\r\n        />\r\n        <Utilities\r\n          changeValue={changeValue}\r\n        />\r\n        <RehabCosts\r\n          changeValue={changeValue}\r\n        />\r\n      </div>\r\n      <div className='button-box'>\r\n        <Button variant='outlined' color='primary' onClick={() => props.switch()}>\r\n          Back\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Results\r\n","import React, { Component } from 'react'\r\nimport * as RealEstateAPI from '../RealEstateAPI';\r\nimport '../styles/App.css'\r\nimport SearchPage from './SearchPage'\r\nimport Results from './Results'\r\nimport { Transition, } from \"react-spring/renderprops\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\r\nimport { teal} from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: teal,\r\n  },\r\n  overrides: {\r\n    MuiInputLabel: {\r\n      root: {\r\n        'font-weight': 'bold'\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nclass App extends Component {\r\n  state = {\r\n    inputAddress: '',\r\n    results: {},\r\n    showResults: true,\r\n    badAddress: false\r\n  }\r\n\r\n  switchScreens = () => {\r\n    this.setState({showResults: this.state.showResults ? false : true})\r\n  }\r\n\r\n  updateAddress = (input) => {\r\n    this.setState({inputAddress: input})\r\n  }\r\n\r\n  updateError = () => {\r\n    this.setState({badAddress: false})\r\n  }\r\n\r\n  search = () => {\r\n    if(this.state.inputAddress !== ''){\r\n      RealEstateAPI.getAll(this.state.inputAddress).then(data => {\r\n        if(data === 500) {\r\n          this.setState({badAddress: !this.state.badAddress})\r\n          return\r\n        }\r\n        this.setState({results: data})\r\n        this.switchScreens()\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let transformFromDir = this.state.showResults ? 'translate3d(-100%,0,0)' : 'translate3d(100%,0,0)'\r\n    let transformLeaveDir = this.state.showResults ? 'translate3d(100%,0,0)' : 'translate3d(-100%,0,0)'\r\n\r\n    return (\r\n      <div className='App-main'>\r\n        <MuiThemeProvider theme={theme}>\r\n          <Transition\r\n            items={this.state.showResults}\r\n            initial={false}\r\n            from={{ position: 'absolute', opacity: 0, transform: transformFromDir, width: '80%'}}\r\n            enter={{ opacity: 1, transform: 'translate3d(0%,0,0)', width: '80%'}}\r\n            leave={{ opacity: 0, transform: transformLeaveDir, width: '80%' }}\r\n            >\r\n            {items =>\r\n              items\r\n                ? props => <div style={props} className='search-page'>\r\n                  <SearchPage\r\n                    updateAddress={this.updateAddress}\r\n                    search={this.search}\r\n                    badAddress={this.state.badAddress}\r\n                    updateError={this.updateError}\r\n                  />\r\n                </div>\r\n                : props => <div style={props} className='results-page'>\r\n                  <Results\r\n                    results={this.state.results}\r\n                    switch={this.switchScreens}\r\n                  />\r\n                </div>\r\n            }\r\n          </Transition>\r\n        </MuiThemeProvider>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import '@fortawesome/fontawesome-free/css/all.min.css'\r\n// import 'bootstrap-css-only/css/bootstrap.min.css'\r\n// import 'mdbreact/dist/css/mdb.css'\r\nimport App from './components/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <App />\r\n    , document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/RoofCalc.e1b9597a.png\";"],"sourceRoot":""}